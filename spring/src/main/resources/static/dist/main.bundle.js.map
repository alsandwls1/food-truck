{"version":3,"sources":["D:/projectd/food-truck-angular/src/$_gendir lazy","D:/projectd/food-truck-angular/src/app/_services/authentication.service.ts","D:/projectd/food-truck-angular/src/app/_services/canival.service.ts","D:/projectd/food-truck-angular/src/app/_services/file-upload.service.ts","D:/projectd/food-truck-angular/src/app/_services/food.service.ts","D:/projectd/food-truck-angular/src/app/_services/google-map.service.ts","D:/projectd/food-truck-angular/src/app/_services/hotlist.service.ts","D:/projectd/food-truck-angular/src/app/_services/member.service.ts","D:/projectd/food-truck-angular/src/app/_services/review.service.ts","D:/projectd/food-truck-angular/src/app/_services/support.service.ts","D:/projectd/food-truck-angular/src/app/_services/truck.service.ts","D:/projectd/food-truck-angular/src/app/app-routing.module.ts","D:/projectd/food-truck-angular/src/app/app.component.css","D:/projectd/food-truck-angular/src/app/app.component.html","D:/projectd/food-truck-angular/src/app/app.component.ts","D:/projectd/food-truck-angular/src/app/app.module.ts","D:/projectd/food-truck-angular/src/app/canival/canival-detail/canival-detail.component.css","D:/projectd/food-truck-angular/src/app/canival/canival-detail/canival-detail.component.html","D:/projectd/food-truck-angular/src/app/canival/canival-detail/canival-detail.component.ts","D:/projectd/food-truck-angular/src/app/canival/canival-view/canival-view.component.css","D:/projectd/food-truck-angular/src/app/canival/canival-view/canival-view.component.html","D:/projectd/food-truck-angular/src/app/canival/canival-view/canival-view.component.ts","D:/projectd/food-truck-angular/src/app/canival/canival-write/canival-write.component.css","D:/projectd/food-truck-angular/src/app/canival/canival-write/canival-write.component.html","D:/projectd/food-truck-angular/src/app/canival/canival-write/canival-write.component.ts","D:/projectd/food-truck-angular/src/app/favorites/favorites.component.css","D:/projectd/food-truck-angular/src/app/favorites/favorites.component.html","D:/projectd/food-truck-angular/src/app/favorites/favorites.component.ts","D:/projectd/food-truck-angular/src/app/google-map/google-map.component.css","D:/projectd/food-truck-angular/src/app/google-map/google-map.component.html","D:/projectd/food-truck-angular/src/app/google-map/google-map.component.ts","D:/projectd/food-truck-angular/src/app/join-page/join-page.component.css","D:/projectd/food-truck-angular/src/app/join-page/join-page.component.html","D:/projectd/food-truck-angular/src/app/join-page/join-page.component.ts","D:/projectd/food-truck-angular/src/app/login-page/login-page.component.css","D:/projectd/food-truck-angular/src/app/login-page/login-page.component.html","D:/projectd/food-truck-angular/src/app/login-page/login-page.component.ts","D:/projectd/food-truck-angular/src/app/main-home/main-home.component.css","D:/projectd/food-truck-angular/src/app/main-home/main-home.component.html","D:/projectd/food-truck-angular/src/app/main-home/main-home.component.ts","D:/projectd/food-truck-angular/src/app/member-profile/member-profile.component.css","D:/projectd/food-truck-angular/src/app/member-profile/member-profile.component.html","D:/projectd/food-truck-angular/src/app/member-profile/member-profile.component.ts","D:/projectd/food-truck-angular/src/app/menu-list/menu-list.component.css","D:/projectd/food-truck-angular/src/app/menu-list/menu-list.component.html","D:/projectd/food-truck-angular/src/app/menu-list/menu-list.component.ts","D:/projectd/food-truck-angular/src/app/reviews/reviews.component.css","D:/projectd/food-truck-angular/src/app/reviews/reviews.component.html","D:/projectd/food-truck-angular/src/app/reviews/reviews.component.ts","D:/projectd/food-truck-angular/src/app/support/support-detail/support-detail.component.css","D:/projectd/food-truck-angular/src/app/support/support-detail/support-detail.component.html","D:/projectd/food-truck-angular/src/app/support/support-detail/support-detail.component.ts","D:/projectd/food-truck-angular/src/app/support/support-update/support-update.component.css","D:/projectd/food-truck-angular/src/app/support/support-update/support-update.component.html","D:/projectd/food-truck-angular/src/app/support/support-update/support-update.component.ts","D:/projectd/food-truck-angular/src/app/support/support-write/support-write.component.css","D:/projectd/food-truck-angular/src/app/support/support-write/support-write.component.html","D:/projectd/food-truck-angular/src/app/support/support-write/support-write.component.ts","D:/projectd/food-truck-angular/src/app/support/support.component.css","D:/projectd/food-truck-angular/src/app/support/support.component.html","D:/projectd/food-truck-angular/src/app/support/support.component.ts","D:/projectd/food-truck-angular/src/app/top-nav/top-nav.component.css","D:/projectd/food-truck-angular/src/app/top-nav/top-nav.component.html","D:/projectd/food-truck-angular/src/app/top-nav/top-nav.component.ts","D:/projectd/food-truck-angular/src/app/truck-info/truck-info.component.css","D:/projectd/food-truck-angular/src/app/truck-info/truck-info.component.html","D:/projectd/food-truck-angular/src/app/truck-info/truck-info.component.ts","D:/projectd/food-truck-angular/src/app/truck-list/truck-list.component.css","D:/projectd/food-truck-angular/src/app/truck-list/truck-list.component.html","D:/projectd/food-truck-angular/src/app/truck-list/truck-list.component.ts","D:/projectd/food-truck-angular/src/app/truck-regist/truck-regist.component.css","D:/projectd/food-truck-angular/src/app/truck-regist/truck-regist.component.html","D:/projectd/food-truck-angular/src/app/truck-regist/truck-regist.component.ts","D:/projectd/food-truck-angular/src/app/truck-reviews/truck-reviews.component.css","D:/projectd/food-truck-angular/src/app/truck-reviews/truck-reviews.component.html","D:/projectd/food-truck-angular/src/app/truck-reviews/truck-reviews.component.ts","D:/projectd/food-truck-angular/src/environments/environment.ts","D:/projectd/food-truck-angular/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, Response, RequestOptions } from '@angular/http';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\r\n\r\nimport { Member } from '../_models/member.model';\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n  private member: Member;\r\n\r\n  private loginUrl: string = \"http://localhost:8080/members\";\r\n  private headers = new Headers({ 'Content-Type': 'application/json; charset=utf-8' });\r\n\r\n  // private loggedIn = new Subject<boolean>();\r\n  private subject = new Subject<any>();\r\n  private subject2 = new Subject<any>();\r\n  private session: string;\r\n\r\n  constructor(\r\n    private http: Http,\r\n    private router: Router\r\n  ) { }\r\n\r\n  getObservable(): Observable<any> {\r\n    console.log('getObservable() working');\r\n    return this.subject.asObservable();\r\n  }\r\n\r\n  getObservable2(): Observable<any> {\r\n    console.log('getObservable() working');\r\n    return this.subject2.asObservable();\r\n  }\r\n\r\n  // checkTruck(email:string) {\r\n  //   const url = `http://localhost:8080/trucks/member/${email}`;\r\n  //   console.log(url);\r\n  //   this.http.get(url).subscribe(res=>{\r\n  //     console.log(res.text());\r\n  //     this.subject2.next({check:res.text()});\r\n  //     return res.text();\r\n  //   });\r\n  // }\r\n\r\n  checkTruck(email: string) {\r\n    const url = `http://localhost:8080/trucks/member/${email}`;\r\n    console.log(url);\r\n    this.http.get(url).subscribe(res => {\r\n      console.log('serivce' + res.text());\r\n      this.subject2.next({ check: res.text() });\r\n    });\r\n  }\r\n\r\n  login(email: string, password: string): Promise<string> {\r\n    const url = `${this.loginUrl}/login`;\r\n    let headers = new Headers({ 'Content-Type': 'application/json;  charset=utf-8', 'Accept': 'application/json' })\r\n    let options = new RequestOptions({ headers: headers });\r\n    let member = { \"mEmail\": email, \"mPassword\": password }\r\n    console.log('member = ' + JSON.stringify(member));\r\n\r\n    return this.http.post(url, JSON.stringify(member), options).toPromise().then(\r\n      res => {\r\n        let member = res.json() as Member;\r\n        console.log('error =' + member.merror);\r\n        if (member.merror !== null) {\r\n          return JSON.stringify(member) || {};\r\n        } else {\r\n          let m = JSON.stringify(member);\r\n          sessionStorage.setItem('member', m);\r\n          //이때, top-nav로 가서 처리\r\n          this.subject.next({ login: 'true' });\r\n          return m || {};\r\n        }\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    const url = `${this.loginUrl}/logout`;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  private extractDataForObject(res: Response) {\r\n    console.log('extractDataForObject#res = ' + JSON.stringify(res));\r\n    let json = res.text();\r\n    json = JSON.parse(json);\r\n    return json || {};\r\n  }\r\n\r\n  private extractData(res: Response) {\r\n    console.log('extractData#res = ' + JSON.stringify(res));\r\n    let json = res.text();\r\n    json = JSON.parse(json);\r\n    return json || [];\r\n  }\r\n\r\n  private handleError(res: Response) {\r\n    console.log(\"Erroe = \" + res);\r\n    return Observable.throw(res.json().error || 'Server Down');\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/_services/authentication.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\n@Injectable()\r\nexport class CanivalService {\r\n\r\n  private subject = new Subject<any>();\r\n  private canivalListUrl: string = \"http://localhost:8080/canival\";\r\n  private headers = new Headers({ 'Content-Type': 'application/json; charset=utf-8' });\r\n\r\n  constructor(private http: Http) { }\r\n\r\n  getCanivalsView(): Observable<any> {\r\n    var url = this.canivalListUrl;\r\n    return this.http.get(url)\r\n      .map(res => {\r\n        let json = res.text();\r\n        json = JSON.parse(json);\r\n        return json || [];\r\n      });\r\n  }\r\n\r\n  getCanivalDetail(cId) {\r\n    const url = `${this.canivalListUrl}/view/${cId}`;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getDeleteCanival(cId) {\r\n    const url = `${this.canivalListUrl}/delete/${cId}`;\r\n    return this.http.delete(url, { headers: this.headers });\r\n  }\r\n\r\n  postAddCanival(\r\n    cTitle: string,\r\n    cContent: string,\r\n    cSdate: string,\r\n    cEdate: string,\r\n    cImage: File\r\n  ) {\r\n    const url = `${this.canivalListUrl}/post`;\r\n    let formdata: FormData = new FormData();\r\n\r\n    formdata.append('cTitle', cTitle)\r\n    formdata.append('cContent', cContent)\r\n    formdata.append('cSdate', cSdate)\r\n    formdata.append('cEdate', cEdate)\r\n    formdata.append('cImage', cImage)\r\n\r\n    return this.http.post(url, formdata);\r\n  }\r\n\r\n  postUpdateCanival(\r\n    cId: string,\r\n    cTitle: string,\r\n    cContent: string,\r\n    cSdate: string,\r\n    cEdate: string,\r\n    cImage: File\r\n  ) {\r\n    const url = `${this.canivalListUrl}/update/${cId}`;\r\n    let formdata: FormData = new FormData();\r\n\r\n    formdata.append('cId', cId)\r\n    formdata.append('cTitle', cTitle)\r\n    formdata.append('cContent', cContent)\r\n    formdata.append('cSdate', cSdate)\r\n    formdata.append('cEdate', cEdate)\r\n    formdata.append('cImage', cImage)\r\n\r\n    return this.http.post(url, formdata);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/_services/canival.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpRequest, HttpResponse, HttpEventType } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\n@Injectable()\r\nexport class UploadFileService {\r\n\r\n  private subject = new Subject<any>();\r\n\r\n  fileUploadNames: Observable<any>;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  pushFileToStorage(file: File, progress: { percentage: number }, foodName: string) {\r\n    let formdata: FormData = new FormData();\r\n\r\n    formdata.append('file', file);\r\n    formdata.append('foodName', foodName);\r\n\r\n    const req = new HttpRequest('POST', '/post', formdata, {\r\n      reportProgress: true,\r\n      responseType: 'text'\r\n    });\r\n\r\n    this.http.request(req).subscribe(event => {\r\n      // if (event.type === HttpEventType.UploadProgress) {\r\n      //   progress.percentage = Math.round(100 * event.loaded / event.total);\r\n      //     this.subject.next({upload:'ok'});\r\n      // } else if (event instanceof HttpResponse) {\r\n      //   console.log('File is completely uploaded!');\r\n      // }\r\n    });\r\n\r\n  }\r\n\r\n  getFiles(): Observable<any> {\r\n    return this.http.get('/getallfiles');\r\n  }\r\n\r\n  getObservable(): Observable<any> {\r\n    return this.subject.asObservable();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/_services/file-upload.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\nimport { Food } from '../_models/food.model'\r\n\r\n@Injectable()\r\nexport class FoodService {\r\n\r\n  private subject = new Subject<any>();\r\n\r\n  private foodUrl: string = \"http://localhost:8080/foods\";\r\n  private headers = new Headers({ 'Content-Type': 'application/json; charset=utf-8' });\r\n\r\n  constructor(private http: Http) { }\r\n\r\n  getObservable(): Observable<any> {\r\n    return this.subject.asObservable();\r\n  }\r\n\r\n  foodRegist(name: string, price: string, description: string, file: File, tid: string) {\r\n    const url = `${this.foodUrl}/post`;\r\n    let formdata: FormData = new FormData();\r\n\r\n    formdata.append('name', name);\r\n    formdata.append('price', price);\r\n    formdata.append('description', description);\r\n    formdata.append('file', file);\r\n    formdata.append('tid', tid);\r\n\r\n    console.log('FoodService # tid=' + formdata.get('tid'));\r\n\r\n    return this.http.post(url, formdata).subscribe(res => this.subject.next({ result: 'ok' })\r\n    );\r\n\r\n  }\r\n\r\n  // getAllfoods() {\r\n  //   const url = `${this.foodUrl}/getAllfoods`;\r\n  //   return this.http.get(url);\r\n  // }\r\n  getAllfoods(tid: string) {\r\n    const url = `${this.foodUrl}/${tid}`;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  removeFood(food: Food) {\r\n    let url = `${this.foodUrl}/delete/${food.fid}`;\r\n    console.log('food url='+url);\r\n    return this.http.delete(url, {headers:this.headers})\r\n      .subscribe(res => this.subject.next({ result: 'ok' }))\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/_services/food.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, Response, RequestOptions } from '@angular/http';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/observable/throw';\r\nimport { Truck } from '../_models/truck.model';\r\n\r\n@Injectable()\r\nexport class GoogleMapService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private truckUrl = \"http://localhost:8080/trucks\";\r\n  private headers = new Headers({ 'Content-Type': 'application/json; charset=utf-8' });\r\n\r\n\r\n  getTruckAllList(): Observable<Truck[]> {\r\n    return this.http.get(this.truckUrl)\r\n      .map(response => response as Truck[])\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  private extractData(res: Response) {\r\n    console.log('res = ' + JSON.stringify(res));\r\n    let json = res.text();\r\n    json = JSON.parse(json);\r\n    return json || [];\r\n  }\r\n\r\n  private extractDataForObject(res: Response) {\r\n    console.log('res = ' + JSON.stringify(res));\r\n    let json = res.text();\r\n    json = JSON.parse(json);\r\n    return json || {};\r\n  }\r\n\r\n  private handleError(res: Response) {\r\n    console.log(res);\r\n    return Observable.throw(res.json().error || 'Server Down');\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/_services/google-map.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\nimport { Hotlist } from '../_models/hotlist.model';\r\nimport { Truck } from '../_models/truck.model';\r\nimport { Member } from '../_models/member.model';\r\nimport { HotlistDetail } from '../_models/hotlistdetail.model';\r\n\r\n@Injectable()\r\nexport class HotlistService {\r\n\r\n  private hotlistUrl: string = \"http://localhost:8080/hotlist\";\r\n  private headers = new Headers({ 'Content-Type': 'application/json; charset=utf-8' });\r\n\r\n  private subject = new Subject<any>();\r\n\r\n  private session: string;\r\n  private member: Member;\r\n\r\n  constructor(private http: Http) {\r\n    this.session = sessionStorage.getItem('member');\r\n  }\r\n\r\n  getObservable(): Observable<any> {\r\n    return this.subject.asObservable();\r\n  }\r\n\r\n  getHotlistDetail(): Observable<HotlistDetail[]> {\r\n    if(this.session !== null){\r\n      this.member = JSON.parse(this.session);\r\n    }\r\n    var email = this.member.memail;\r\n    var url = `${this.hotlistUrl}/${email}`;\r\n    return this.http.get(url)\r\n      .map(this.extractData)\r\n      ._catch(this.handleError);\r\n  }\r\n\r\n  checkFavo(tId:string){\r\n    console.log(tId);\r\n    var id = JSON.parse(sessionStorage.getItem('member')).memail;\r\n    console.log(\"id = \" + id);\r\n    const url = `${this.hotlistUrl}/check/${id}/${tId}`;\r\n    console.log(url)\r\n    return this.http.get(url).subscribe(\r\n      res=>{\r\n        if(res.json().htruck == tId){\r\n          this.subject.next({check:false});\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  addHotlist(truck: string) {\r\n    console.log(truck);\r\n    console.log(JSON.parse(sessionStorage.getItem('member')).memail);\r\n\r\n    var url = `${this.hotlistUrl}/post`;\r\n    let headers = new Headers({ 'Content-Type': 'application/json', 'Accept': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n    let hotlist = {\"hMember\": JSON.parse(sessionStorage.getItem('member')).memail, \"hTruck\": truck };\r\n\r\n    return this.http.post(url, JSON.stringify(hotlist), options);\r\n  }\r\n\r\n  addHotlist2(tid: string) {\r\n    console.log(tid);\r\n    console.log(JSON.parse(sessionStorage.getItem('member')).memail);\r\n\r\n    var url = `${this.hotlistUrl}/post`;\r\n    let headers = new Headers({ 'Content-Type': 'application/json', 'Accept': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n    let hotlist = {\"hMember\": JSON.parse(sessionStorage.getItem('member')).memail, \"hTruck\": tid };\r\n\r\n    return this.http.post(url, JSON.stringify(hotlist), options).subscribe(res => this.subject.next({ favo: 'ok' }));\r\n  }\r\n\r\n  //이미 존재하는 즐찾인지 확인\r\n  checkHotlist(tid:string, email:string) {\r\n    console.log('checkHotlist===='+tid);\r\n    const url = `${this.hotlistUrl}/check/${tid}/${email}`;\r\n    console.log('이미 존재하는 즐찾인지 url::::'+url)\r\n    return this.http.get(url).subscribe(\r\n      res=>{\r\n        console.log('res.text() = '+res.text());\r\n        if(res.text()) {\r\n          console.log('if(res.text()) = '+res.text());\r\n          this.subject.next({ favo: 'ok' });\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  // addHotlist(member: string, truck: string): Observable<Hotlist> {\r\n  //   var url = this.hotlistUrl;\r\n  //   let headers = new Headers({ 'Content-Type': 'application/json', 'Accept': 'application/json' });\r\n  //   let options = new RequestOptions({ headers: headers });\r\n  //   let hotlist = { \"hId\": null, \"hMember\": member, \"hTruck\": truck };\r\n  //   console.log(' add holist info = ' + JSON.stringify(hotlist));\r\n  //\r\n  //   return this.http.post(url, JSON.stringify(hotlist), options)\r\n  //     .map(this.extractDataForObject)\r\n  //     ._catch(this.handleError);\r\n  // }\r\n\r\n//되는 remove\r\n  removeHotlist(hotlistdetail: HotlistDetail): Observable<string> {\r\n    let url = `${this.hotlistUrl}/${hotlistdetail.hid}`;\r\n    console.log('remove url='+url);\r\n    return this.http.delete(url, {headers:this.headers})\r\n    .map(res => {\r\n      let json = res.text();\r\n      // this.subject.next({ json });\r\n      return json || {};\r\n    })\r\n    ._catch(this.handleError);\r\n  }\r\n\r\n\r\n  private extractDataForObject(res: Response) {\r\n    let json = res.text();\r\n    console.log('hotlist service='+json);\r\n    json = JSON.parse(json);\r\n    return json || {};\r\n  }\r\n\r\n  private extractData(res: Response) {\r\n    let json = res.text();\r\n    json = JSON.parse(json);\r\n    return json || [];\r\n  }\r\n\r\n  private handleError(res: Response) {\r\n    console.log(\"Erroe = \" + res);\r\n    return Observable.throw(res.json().error || 'Server Down');\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/_services/hotlist.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\n// import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subject } from 'rxjs/subject';\r\n\r\nimport { AuthenticationService } from '../_services/authentication.service';\r\n\r\nimport { Member } from '../_models/member.model';\r\n\r\n@Injectable()\r\nexport class MemberService {\r\n\r\n  memberUrl: string = \"http://localhost:8080/members\";\r\n  message: string;\r\n\r\n  constructor(\r\n    private http: Http,\r\n    private authService: AuthenticationService) {\r\n  }\r\n\r\n  getMember(memail: string): Observable<Member> {\r\n    var url = this.memberUrl + \"/\" + sessionStorage.getItem('member');\r\n    return this.http.get(url)\r\n      .map(this.extractDataForObject)\r\n      ._catch(this.handleError);\r\n  }\r\n\r\n  addMember(email: string, password: string, nickname: string, registype:number): Observable<Member> {\r\n    let url = `${this.memberUrl}/regist`;\r\n    let headers = new Headers({ 'Content-Type': 'application/json', 'Accept': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n    let member = { \"mEmail\": email, \"mPassword\": password, \"mNickname\": nickname, \"mRegistype\": registype };\r\n    console.log('member = ' + JSON.stringify(member));\r\n\r\n    return this.http.post(url, JSON.stringify(member), options)\r\n      .map(this.extractDataForObject)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  modifyMember(member:Member): Observable<Member> {\r\n    let url = `${this.memberUrl}/update/${member.memail}`;\r\n    console.log(\"rrrr = \"+url);\r\n    let headers = new Headers({ 'Content-Type': 'application/json', 'Accept': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n    // let member = { \"mEmail\": email, \"mPassword\": password, \"mNickname\": nickname };\r\n    console.log('member = ' + JSON.stringify(member));\r\n\r\n    return this.http.post(url, JSON.stringify(member), options)\r\n      .map(this.extractDataForObject)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  private extractDataForObject(res: Response) {\r\n    let json = res.text();\r\n    console.log(json);\r\n    json = JSON.parse(json);\r\n    return json || {};\r\n  }\r\n\r\n  private extractData(res: Response) {\r\n    console.log('extractData#res = ' + JSON.stringify(res));\r\n    let json = res.text();\r\n    json = JSON.parse(json);\r\n    return json || [];\r\n  }\r\n\r\n  private handleError(res: Response) {\r\n    console.log(\"Erroe = \" + res);\r\n    return Observable.throw(res.json().error || 'Server Down');\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/_services/member.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\nimport { Review } from '../_models/review.model';\r\nimport { Member } from '../_models/member.model';\r\n\r\n\r\n@Injectable()\r\nexport class ReviewService {\r\n  private subject = new Subject<any>();\r\n\r\n  private reviewUrl: string = \"http://localhost:8080/reviews\";\r\n  private headers = new Headers({ 'Content-Type': 'application/json; charset=utf-8' });\r\n\r\n  private session: string;\r\n  private member: Member;\r\n\r\n\r\n  constructor(private http: Http) {\r\n    // console.log('언제실행?')\r\n    this.session = sessionStorage.getItem('member');\r\n    console.log('review service # constructor # session =' + this.session);\r\n  }\r\n\r\n  getObservable(): Observable<any> {\r\n    return this.subject.asObservable();\r\n  }\r\n\r\n  addReview(comment:string, image:File, score:string, email:string, truck:string) {\r\n    var url = `${this.reviewUrl}/post`;\r\n    // let headers = new Headers({ 'Content-Type': 'application/json', 'Accept': 'application/json' });\r\n    // let options = new RequestOptions({ headers: headers });\r\n    let formdata: FormData = new FormData();\r\n\r\n    formdata.append('comment', comment);\r\n    formdata.append('image', image);\r\n    formdata.append('score', score);\r\n    formdata.append('email', email);\r\n    formdata.append('truck', truck);\r\n    // let review = { \"rComment\":comment, \"rImage\": image, \"rScore\":score, \"rMember\":email, \"rTruck\":truck };\r\n    // console.log('add review info = ' + JSON.stringify(review.rImage));\r\n    console.log('reivew 1='+formdata.get('comment'));\r\n    console.log('reivew 2='+formdata.get('image'));\r\n    console.log('reivew 3='+formdata.get('score'));\r\n    console.log('reivew 4='+formdata.get('email'));\r\n    console.log('reivew 5='+formdata.get('truck'));\r\n\r\n    return this.http.post(url, formdata).subscribe(res => this.subject.next({ result: 'ok' }));\r\n      // .map(res => {\r\n      //   let json = res.text();\r\n      //   console.log('json='+json)\r\n      //   return json || {};\r\n      // })\r\n      // ._catch(this.handleError);\r\n  }\r\n\r\n\r\n  addReview2(comment:string, score:string, email:string, truck:string) {\r\n    var url = `${this.reviewUrl}/post2`;\r\n    // let headers = new Headers({ 'Content-Type': 'application/json', 'Accept': 'application/json' });\r\n    // let options = new RequestOptions({ headers: headers });\r\n    let formdata: FormData = new FormData();\r\n\r\n    formdata.append('comment', comment);\r\n    formdata.append('score', score);\r\n    formdata.append('email', email);\r\n    formdata.append('truck', truck);\r\n    // let review = { \"rComment\":comment, \"rImage\": image, \"rScore\":score, \"rMember\":email, \"rTruck\":truck };\r\n    // console.log('add review info = ' + JSON.stringify(review.rImage));\r\n    console.log('reivew 1='+formdata.get('comment'));\r\n    console.log('reivew 3='+formdata.get('score'));\r\n    console.log('reivew 4='+formdata.get('email'));\r\n    console.log('reivew 5='+formdata.get('truck'));\r\n\r\n    return this.http.post(url, formdata).subscribe(res => this.subject.next({ result: 'ok' }));\r\n      // .map(this.extractDataForObject)\r\n      // .map(res => {\r\n      //   let json = res.text();\r\n      //   console.log('json='+json)\r\n      //   return json || {};\r\n      // })\r\n      // ._catch(this.handleError);\r\n  }\r\n\r\n  removeReview(review:Review): Observable<string> {\r\n    let url = `${this.reviewUrl}/delete/${review.rid}`;\r\n    console.log('review remove url= '+url);\r\n    return this.http.delete(url, {headers:this.headers})\r\n      .map(res => {\r\n        let json = res.text();\r\n        return json || {};\r\n      })\r\n      ._catch(this.handleError);\r\n  }\r\n\r\n  //내가 등록한 리뷰를 가져온다.\r\n  getMyReview(): Observable<Review[]> {\r\n    console.log('review service # getMyReview # session =' + this.session);\r\n    if(this.session !== null){\r\n      this.member = JSON.parse(this.session);\r\n    }\r\n    var email = this.member.memail;\r\n    var url = `${this.reviewUrl}/member/${email}`;\r\n    console.log('review url='+url);\r\n    return this.http.get(url)\r\n      .map(this.extractData)\r\n      ._catch(this.handleError);\r\n  }\r\n\r\n  getTruckReview(tid:string): Observable<Review[]> {\r\n    var url = `${this.reviewUrl}/truck/${tid}`;\r\n    console.log('review url='+url);\r\n    return this.http.get(url)\r\n      .map(res => {\r\n        let json = res.text();\r\n        console.log(json);\r\n        json = JSON.parse(json);\r\n        return json || [];\r\n      })\r\n      ._catch(this.handleError);\r\n  }\r\n\r\n\r\n  private extractDataForObject(res: Response) {\r\n    let json = res.text();\r\n    console.log('review service=' + json);\r\n    json = JSON.parse(json);\r\n    return json || {};\r\n  }\r\n\r\n  private extractData(res: Response) {\r\n    let json = res.text();\r\n    console.log('review service=' + json);\r\n    json = JSON.parse(json);\r\n    return json || [];\r\n  }\r\n\r\n  private handleError(res: Response) {\r\n    console.log(\"Erroe = \" + res);\r\n    return Observable.throw(res.json().error || 'Server Down');\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/_services/review.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\nimport { Member } from '../_models/member.model';\r\n\r\n\r\n@Injectable()\r\nexport class SupportService {\r\n\r\n  private subject = new Subject<any>();\r\n  private supportUrl: string = \"http://localhost:8080/supports\";\r\n  private headers = new Headers({ 'Content-Type': 'application/json; charset=utf-8' });\r\n\r\n  getObservable(): Observable<any> {\r\n    return this.subject.asObservable();\r\n  }\r\n\r\n  constructor(private http: Http) { }\r\n\r\n  addSupport(f, member: Member) {\r\n    const url = `${this.supportUrl}/post`;\r\n    let headers = new Headers({ 'Content-Type': 'application/json', 'Accept': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n    let support = { 'stitle': f.title, 'scontent': f.content, 'sregistype':member.mregistype,'smember': member.memail };\r\n    this.http.post(url, JSON.stringify(support), options)\r\n      .subscribe(res => this.subject.next({ result: 'ok' }));\r\n  }\r\n\r\n  updateSupport(sid: number, stitle: string, scontent: string) {\r\n    const url = `${this.supportUrl}/update`;\r\n    let headers = new Headers({ 'Content-Type': 'application/json', 'Accept': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n    let support = { 'sid': sid, 'stitle': stitle, 'scontent': scontent };\r\n    console.log(url);\r\n    this.http.post(url, JSON.stringify(support), options)\r\n      .subscribe(res => this.subject.next({ result2: 'ok' }));\r\n  }\r\n\r\n  getList() {\r\n    const url = `${this.supportUrl}`;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getDetail(sid: string) {\r\n    console.log(sid);\r\n    const url = `${this.supportUrl}/number/${sid}`;\r\n    console.log(url);\r\n    return this.http.get(url);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/_services/support.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpRequest, HttpResponse, HttpEventType } from '@angular/common/http';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\nimport { Truck } from '../_models/truck.model';\r\n\r\n@Injectable()\r\nexport class TruckService {\r\n\r\n  trucks2: object[] = [\r\n  ];\r\n\r\n  private subject = new Subject<any>();\r\n  private truckUrl: string = \"http://localhost:8080/trucks\";\r\n\r\n\r\n  constructor(private http: Http) { }\r\n\r\n\r\n  getObservable(): Observable<any> {\r\n    // console.log('getObservable() working');\r\n    return this.subject.asObservable();\r\n  }\r\n\r\n  // truckRegist(name: string, open: string, close: string, lat: string, lng: string, comment: string, file: File) {\r\n  truckRegist(name: string, open: string, close: string, lat: string, lng: string, comment: string, file: File, email: string) {\r\n    const url = `${this.truckUrl}/post`;\r\n    let formdata: FormData = new FormData();\r\n    let address: string;\r\n    // let headers = new Headers({ 'Content-Type': 'application/json', 'Accept': 'application/json' });\r\n    // let options = new RequestOptions({ headers: headers });\r\n\r\n    this.http.get(\"https://maps.googleapis.com/maps/api/geocode/json?latlng=\" + lat + \",\" + lng + \"&key=AIzaSyAmd6XJpMMk5qA869GC9XXrNmo8Fb1cRYg\")\r\n      .subscribe(response => {\r\n        // console.log(response.json());\r\n        console.log(response.json().results[0].formatted_address);\r\n        address = response.json().results[0].formatted_address;\r\n\r\n        console.log(address);\r\n\r\n        formdata.append('name', name);\r\n        formdata.append('open', open);\r\n        formdata.append('close', close);\r\n        formdata.append('lat', lat);\r\n        formdata.append('lng', lng);\r\n        formdata.append('comment', comment);\r\n        formdata.append('file', file);\r\n        formdata.append('address', address);\r\n        formdata.append('email', email);\r\n\r\n        console.log(formdata.get('address'));\r\n        console.log(formdata.get('file'));\r\n        console.log(formdata.get('email'));\r\n\r\n\r\n        return this.http.post(url, formdata).subscribe(() => {\r\n          this.subject.next({ check: 'true' })\r\n        }\r\n        );\r\n      })\r\n  }\r\n\r\n  truckgetAll(): Observable<any> {\r\n    const url = `${this.truckUrl}`;\r\n    return this.http.get(url)\r\n  }\r\n\r\n  truckRegist2(tid: string, name: string, open: string, close: string, lat: string, lng: string, comment: string, file: string, email: string) {\r\n    const url = `${this.truckUrl}/post2`;\r\n    let formdata: FormData = new FormData();\r\n    let address: string;\r\n    // let headers = new Headers({ 'Content-Type': 'application/json', 'Accept': 'application/json' });\r\n    // let options = new RequestOptions({ headers: headers });\r\n\r\n    this.http.get(\"https://maps.googleapis.com/maps/api/geocode/json?latlng=\" + lat + \",\" + lng + \"&key=AIzaSyAmd6XJpMMk5qA869GC9XXrNmo8Fb1cRYg\")\r\n      .subscribe(response => {\r\n        // console.log(response.json());\r\n        console.log(response.json().results[0].formatted_address);\r\n        address = response.json().results[0].formatted_address;\r\n\r\n        console.log(address);\r\n\r\n        formdata.append('tid', tid);\r\n        formdata.append('name', name);\r\n        formdata.append('open', open);\r\n        formdata.append('close', close);\r\n        formdata.append('lat', lat);\r\n        formdata.append('lng', lng);\r\n        formdata.append('comment', comment);\r\n        formdata.append('file', file);\r\n        formdata.append('address', address);\r\n        formdata.append('email', email);\r\n\r\n        console.log(formdata.get('address'));\r\n        console.log(formdata.get('file'));\r\n        console.log(formdata.get('email'));\r\n\r\n\r\n        return this.http.post(url, formdata).subscribe(() => {\r\n          this.subject.next({ check: 'true' })\r\n        }\r\n        );\r\n      })\r\n  }\r\n\r\n  truckRegist3(tid: string, name: string, open: string, close: string, lat: string, lng: string, comment: string, file: File, email: string) {\r\n    const url = `${this.truckUrl}/post3`;\r\n    let formdata: FormData = new FormData();\r\n    let address: string;\r\n    // let headers = new Headers({ 'Content-Type': 'application/json', 'Accept': 'application/json' });\r\n    // let options = new RequestOptions({ headers: headers });\r\n\r\n    this.http.get(\"https://maps.googleapis.com/maps/api/geocode/json?latlng=\" + lat + \",\" + lng + \"&key=AIzaSyAmd6XJpMMk5qA869GC9XXrNmo8Fb1cRYg\")\r\n      .subscribe(response => {\r\n        // console.log(response.json());\r\n        console.log(response.json().results[0].formatted_address);\r\n        address = response.json().results[0].formatted_address;\r\n\r\n        console.log(address);\r\n\r\n        formdata.append('tid', tid);\r\n        formdata.append('name', name);\r\n        formdata.append('open', open);\r\n        formdata.append('close', close);\r\n        formdata.append('lat', lat);\r\n        formdata.append('lng', lng);\r\n        formdata.append('comment', comment);\r\n        formdata.append('file', file);\r\n        formdata.append('address', address);\r\n        formdata.append('email', email);\r\n\r\n        console.log(formdata.get('address'));\r\n        console.log(formdata.get('file'));\r\n        console.log(formdata.get('email'));\r\n\r\n\r\n        return this.http.post(url, formdata).subscribe(() => {\r\n          this.subject.next({ check: 'true' })\r\n        }\r\n        );\r\n      })\r\n  }\r\n\r\n  keyFind(key: string): Observable<any> {\r\n    console.log(key);\r\n    const url = `${this.truckUrl}/find/${key}`;\r\n    console.log(url);\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getTruckInfo(tid: string): Observable<any> {\r\n    const url = `${this.truckUrl}/${tid}`;\r\n    return this.http.get(url)\r\n      .map(this.extractDataForObject)\r\n      ._catch(this.handleError);\r\n  }\r\n\r\n  getTruckById(tid: string) {\r\n    let url = `${this.truckUrl}/${tid}`;\r\n    // console.log(this.http2.get(url));\r\n    console.log(url);\r\n    return this.http.get(url);\r\n  }\r\n\r\n  private extractDataForObject(res: Response) {\r\n    let json = res.text();\r\n    console.log('truck service=' + json);\r\n    json = JSON.parse(json);\r\n    return json || {};\r\n  }\r\n\r\n  private extractData(res: Response) {\r\n    let json = res.text();\r\n    console.log('review service=' + json);\r\n    json = JSON.parse(json);\r\n    return json || [];\r\n  }\r\n\r\n  private handleError(res: Response) {\r\n    console.log(\"Erroe = \" + res);\r\n    return Observable.throw(res.json().error || 'Server Down');\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/_services/truck.service.ts","import { NgModule }             from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { GoogleMapComponent } from './google-map/google-map.component';\r\nimport { MainHomeComponent } from './main-home/main-home.component';\r\nimport { LoginPageComponent } from './login-page/login-page.component';\r\nimport { JoinPageComponent } from './join-page/join-page.component';\r\nimport { TruckListComponent } from './truck-list/truck-list.component';\r\nimport { SupportComponent } from './support/support.component';\r\nimport { FavoritesComponent } from './favorites/favorites.component';\r\nimport { ReviewsComponent } from './reviews/reviews.component';\r\nimport { TruckInfoComponent } from './truck-info/truck-info.component';\r\nimport { TruckReviewsComponent } from './truck-reviews/truck-reviews.component';\r\nimport { MenuListComponent } from './menu-list/menu-list.component';\r\nimport { TruckRegistComponent } from './truck-regist/truck-regist.component';\r\nimport { SupportWriteComponent } from './support/support-write/support-write.component';\r\nimport { SupportDetailComponent } from './support/support-detail/support-detail.component';\r\nimport { SupportUpdateComponent } from './support/support-update/support-update.component';\r\nimport { MemberProfileComponent } from './member-profile/member-profile.component';\r\nimport { CanivalDetailComponent } from './canival/canival-detail/canival-detail.component';\r\nimport { CanivalViewComponent } from './canival/canival-view/canival-view.component';\r\nimport { CanivalWriteComponent } from './canival/canival-write/canival-write.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/main-home', pathMatch: 'full' },\r\n  { path: 'main-home', component: MainHomeComponent},\r\n  { path: 'truck-map', component: GoogleMapComponent},\r\n  { path: 'login-page', component: LoginPageComponent},\r\n  { path: 'join-page', component: JoinPageComponent},\r\n  { path: 'truck-list', component: TruckListComponent},\r\n  { path: 'favorites', component: FavoritesComponent},\r\n  { path: 'support', component: SupportComponent},\r\n  { path: 'support-detail/:sid', component: SupportDetailComponent},\r\n  { path: 'support/write', component: SupportWriteComponent},\r\n  { path: 'support-update/:sid', component: SupportUpdateComponent},\r\n  { path: 'reviews', component: ReviewsComponent},\r\n  { path: 'menu-list', component: MenuListComponent},\r\n  { path: 'truck-info/:tid', component: TruckInfoComponent},\r\n  { path: 'truck-reviews', component: TruckReviewsComponent},\r\n  { path: 'truck-regist', component: TruckRegistComponent},\r\n  { path: 'member-profile', component: MemberProfileComponent},\r\n  { path: 'canival-view', component: CanivalViewComponent},\r\n  { path: 'canival-detail/:cid', component: CanivalDetailComponent},\r\n  { path: 'canival-write', component: CanivalWriteComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forRoot(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<app-top-nav></app-top-nav>\\r\\n<router-outlet></router-outlet>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpModule } from '@angular/http';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\n\r\n//rating star : npm install angular-star-rating --save\r\nimport { StarRatingModule } from 'angular-star-rating';\r\n\r\n//pagination : npm install ngx-pagination --save\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\n\r\n//icons :  npm install --save font-awesome angular-font-awesome\r\n//기본설정 - angular-cli.json파일에 아래의 것을 추가\r\n // \"styles\": [\r\n//   \"styles.css\",\r\n//   \"../node_modules/font-awesome/css/font-awesome.css\"\r\n// ],\r\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\r\n\r\n// modal : npm i ngx-smart-modal --save\r\nimport { NgxSmartModalModule, NgxSmartModalService } from 'ngx-smart-modal';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n//timepicker: npm install ngx-bootstrap --save\r\nimport { TimepickerModule  } from 'ngx-bootstrap';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap';\r\nimport { PopoverModule } from 'ngx-bootstrap';\r\n\r\n//component\r\nimport { AppComponent } from './app.component';\r\nimport { GoogleMapComponent } from './google-map/google-map.component';\r\nimport { MainHomeComponent } from './main-home/main-home.component';\r\nimport { LoginPageComponent } from './login-page/login-page.component';\r\nimport { JoinPageComponent } from './join-page/join-page.component';\r\nimport { TopNavComponent } from './top-nav/top-nav.component';\r\nimport { TruckListComponent } from './truck-list/truck-list.component';\r\nimport { SupportComponent } from './support/support.component';\r\nimport { FavoritesComponent } from './favorites/favorites.component';\r\nimport { ReviewsComponent } from './reviews/reviews.component';\r\nimport { TruckInfoComponent } from './truck-info/truck-info.component';\r\nimport { TruckReviewsComponent } from './truck-reviews/truck-reviews.component';\r\nimport { MenuListComponent } from './menu-list/menu-list.component';\r\nimport { TruckRegistComponent } from './truck-regist/truck-regist.component';\r\nimport { SupportDetailComponent } from './support/support-detail/support-detail.component';\r\nimport { SupportWriteComponent } from './support/support-write/support-write.component';\r\nimport { SupportUpdateComponent } from './support/support-update/support-update.component';\r\nimport { CanivalDetailComponent } from './canival/canival-detail/canival-detail.component';\r\nimport { CanivalViewComponent } from './canival/canival-view/canival-view.component';\r\nimport { CanivalWriteComponent } from './canival/canival-write/canival-write.component';\r\nimport { MemberProfileComponent } from './member-profile/member-profile.component';\r\n\r\n//service\r\nimport { AuthenticationService } from './_services/authentication.service';\r\nimport { MemberService } from './_services/member.service';\r\nimport { HotlistService } from './_services/hotlist.service';\r\nimport { ReviewService } from './_services/review.service';\r\nimport { GoogleMapService } from './_services/google-map.service';\r\nimport { TruckService } from './_services/truck.service';\r\nimport { UploadFileService } from './_services/file-upload.service';\r\nimport { FoodService } from './_services/food.service';\r\nimport { SupportService } from './_services/support.service';\r\nimport { CanivalService } from './_services/canival.service';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    GoogleMapComponent,\r\n    MainHomeComponent,\r\n    LoginPageComponent,\r\n    JoinPageComponent,\r\n    TopNavComponent,\r\n    TruckListComponent,\r\n    SupportComponent,\r\n    FavoritesComponent,\r\n    ReviewsComponent,\r\n    TruckInfoComponent,\r\n    TruckReviewsComponent,\r\n    MenuListComponent,\r\n    TruckRegistComponent,\r\n    SupportDetailComponent,\r\n    SupportWriteComponent,\r\n    SupportUpdateComponent,\r\n    MemberProfileComponent,\r\n    CanivalDetailComponent,\r\n    CanivalViewComponent,\r\n    CanivalWriteComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule, ReactiveFormsModule,\r\n    CommonModule,\r\n    HttpModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    //rating star\r\n    StarRatingModule.forRoot(),\r\n    //pagination\r\n    NgxPaginationModule,\r\n    //icons\r\n    AngularFontAwesomeModule,\r\n    //modal\r\n    NgxSmartModalModule.forRoot(),\r\n    BrowserAnimationsModule,\r\n    //timepicker\r\n    TimepickerModule .forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    PopoverModule.forRoot(),\r\n    AgmCoreModule.forRoot({\r\n      apiKey: 'AIzaSyBFQmGdDApLDMW8Fp3F8VtOv9kwAg1xAUU',\r\n      region: \"kr\",\r\n      libraries: [\"places\"],\r\n    })\r\n  ],\r\n  providers: [\r\n    AuthenticationService,\r\n    MemberService,\r\n    HotlistService,\r\n    ReviewService,\r\n    GoogleMapService,\r\n    TruckService,\r\n    UploadFileService,\r\n    FoodService,\r\n    SupportService,\r\n    CanivalService,\r\n    //modal service\r\n    NgxSmartModalService,\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/app.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/canival/canival-detail/canival-detail.component.css\n// module id = ../../../../../src/app/canival/canival-detail/canival-detail.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"!click\\\">\\r\\n  <table class=\\\"table table-view\\\">\\r\\n    <colgroup>\\r\\n      <col width=\\\"7%\\\">\\r\\n      <col width=\\\"*\\\">\\r\\n      <col width=\\\"15%\\\">\\r\\n      <col width=\\\"10%\\\">\\r\\n      <col width=\\\"7%\\\">\\r\\n    </colgroup>\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th class=\\\"subject\\\"><b>제목 : </b> {{cTitle}}</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr>\\r\\n        <td class=\\\"infocell pull-right\\\" >\\r\\n\\r\\n          <b>글번호</b> &nbsp; &nbsp; {{cId}} &nbsp; &nbsp;\\r\\n          <b>시작일</b> &nbsp; &nbsp; {{cSdate}} &nbsp; &nbsp;\\r\\n          <b>종료일</b> &nbsp; &nbsp; {{cEdate}} &nbsp; &nbsp;\\r\\n          <b>조회수</b> &nbsp; {{cViewcount}} &nbsp;\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td class=\\\"contents pull-center\\\">\\r\\n          <img src=\\\"http://localhost:8080/image/{{cImage}}\\\" alt=\\\"x\\\" width=\\\"450px\\\" height=\\\"auto\\\"><br>\\r\\n          {{cContent}}\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n  <hr>\\r\\n  <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/canival-view']\\\" >목록</a>\\r\\n  <a class=\\\"btn btn-primary\\\" (click)=\\\"preview(cId)\\\" *ngIf=\\\"cId>0\\\">이전글</a>\\r\\n  <a class=\\\"btn btn-primary\\\" (click)=\\\"next(cId)\\\" *ngIf=\\\"cId<100\\\">다음글</a>\\r\\n  <a class=\\\"btn btn-primary\\\" (click)=\\\"updateButton()\\\">수정</a>\\r\\n  <a class=\\\"btn btn-primary\\\" (click)=\\\"getDeleteCanival(cId)\\\">삭제</a>\\r\\n</div>\\r\\n\\r\\n<!-- 수정 버튼 누르면 보이는 폼 -->\\r\\n\\r\\n<div class=\\\"container\\\" *ngIf=\\\"click\\\">\\r\\n  <form class=\\\"form-horizontal\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"postUpdateCanival(f)\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"writer\\\" class=\\\"control-label col-xs-2\\\">글번호</label>\\r\\n      <div class=\\\"col-xs-10\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"cId\\\" name=\\\"cId\\\" placeholder=\\\"{{cId}}\\\" readonly>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"title\\\" class=\\\"control-label col-xs-2\\\">제목</label>\\r\\n      <div class=\\\"col-xs-10\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"cTitle\\\" name=\\\"cTitle\\\" placeholder=\\\"축제 또는 행사명을 적어주세요\\\" required>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"writer\\\" class=\\\"control-label col-xs-2\\\">작성자</label>\\r\\n      <div class=\\\"col-xs-10\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"관리자\\\" readonly>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"control-label col-xs-2\\\" for=\\\"picture\\\">사진</label>\\r\\n      <div class=\\\"col-xs-10\\\">\\r\\n        <input type=\\\"file\\\" class=\\\"form-control\\\" (change)=\\\"selectFile($event)\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"content\\\" class=\\\"control-label col-xs-2\\\">내용</label>\\r\\n      <div class=\\\"col-xs-10\\\">\\r\\n        <textarea rows=\\\"20\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"cContent\\\" name=\\\"cContent\\\" placeholder=\\\"상세 내용을 적어주세요.\\\" required></textarea>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"title\\\" class=\\\"control-label col-xs-2\\\">시작일</label>\\r\\n      <div class=\\\"col-xs-10\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"cSdate\\\" name=\\\"cSdate\\\" placeholder=\\\"2017.11.08 처럼 적어주세요\\\" required>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"title\\\" class=\\\"control-label col-xs-2\\\">종료일</label>\\r\\n      <div class=\\\"col-xs-10\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"cEdate\\\" name=\\\"cEdate\\\" placeholder=\\\"2017.11.10 처럼 적어주세요\\\" required>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"col-xs-offset-2 col-xs-10\\\">\\r\\n        <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/canival-view']\\\">목록</a>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"f.invalid\\\">저장</button>\\r\\n        <a class=\\\"btn btn-primary\\\" (click)=\\\"getDeleteCanival(f)\\\">삭제</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/canival/canival-detail/canival-detail.component.html\n// module id = ../../../../../src/app/canival/canival-detail/canival-detail.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { NgModule } from '@angular/core';\r\nimport { CanivalService } from '../../_services/canival.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-canival-detail',\r\n  templateUrl: './canival-detail.component.html',\r\n  styleUrls: ['./canival-detail.component.css']\r\n})\r\nexport class CanivalDetailComponent implements OnInit {\r\n  sub: any;\r\n  length: number;\r\n\r\n  // 상세보기에 필요한 모든 속성들\r\n  cId: String;\r\n\r\n  cTitle: string;\r\n  cSdate: string;\r\n  cEdate: string;\r\n  cContent: string;\r\n  cViewcount: number;\r\n  cImage: string;\r\n  cMember: string;\r\n\r\n  click: boolean = false;\r\n  selectedFiles: FileList;\r\n\r\n  constructor(\r\n    private canivalService: CanivalService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // 축제글 배열의 길이 뽑아서 변수에 저장 --> 다음글 메소드에 필요\r\n    this.canivalService.getCanivalsView().subscribe(res => {\r\n      this.length = res.length;\r\n    });\r\n\r\n    this.sub = this.activatedRoute.params.subscribe(params => {\r\n      this.cId = params['cid'];\r\n      this.getCanivalDetail(this.cId);\r\n    });\r\n  }\r\n\r\n  // 특정 축제 정보 보여주는 메소드\r\n  getCanivalDetail(cId) {\r\n    this.canivalService.getCanivalDetail(cId).subscribe(res => {\r\n      console.log(res.json())\r\n      this.cId = res.json().cid;\r\n      this.cTitle = res.json().ctitle;\r\n      this.cSdate = res.json().csdate;\r\n      this.cEdate = res.json().cedate;\r\n      this.cContent = res.json().ccontent;\r\n      this.cViewcount = res.json().cviewcnt;\r\n      this.cImage = res.json().cimage;\r\n    });\r\n  }\r\n\r\n  // 특정 축제 정보 삭제 메소드\r\n  getDeleteCanival(cId) {\r\n    this.canivalService.getDeleteCanival(cId).subscribe();\r\n    this.router.navigate(['/canival-view']);\r\n  }\r\n\r\n  //수정 버튼, 수정 가능 양식으로 변환 해줌.\r\n  updateButton() {\r\n    this.click = !this.click;\r\n  }\r\n\r\n  // 특정 축제 정보 수정 메소드\r\n  postUpdateCanival(f) {\r\n    if (f.valid) {\r\n      this.click = !this.click;\r\n      f.value.cImage = this.selectedFiles.item(0);\r\n      f.value.cId = this.cId;\r\n      this.canivalService.postUpdateCanival(\r\n        f.value.cId,\r\n        f.value.cTitle,\r\n        f.value.cContent,\r\n        f.value.cSdate,\r\n        f.value.cEdate,\r\n        f.value.cImage,\r\n      ).subscribe(res => {\r\n        console.log(\"여기여기여기여기\")\r\n        // this.router.navigate([\"canival-detail\", res.json().cid]);\r\n        this.getCanivalDetail(this.cId);\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  // 사진 선택\r\n  selectFile(event) {\r\n    this.selectedFiles = event.target.files;\r\n  }\r\n\r\n  // 이전글 이동 메소드\r\n  preview(cId) {\r\n    var key = parseInt(cId) - 1;\r\n    this.getCanivalDetail(key);\r\n  }\r\n\r\n  // 다음글 이동 메소드\r\n  next(cId) {\r\n    var key = parseInt(cId) + 1;\r\n    this.getCanivalDetail(key);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/canival/canival-detail/canival-detail.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/canival/canival-view/canival-view.component.css\n// module id = ../../../../../src/app/canival/canival-view/canival-view.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\r\\n  <table class=\\\"table table-hover\\\">\\r\\n    <!-- <colgroup>\\r\\n      <col width=\\\"7%\\\">\\r\\n      <col width=\\\"*\\\">\\r\\n      <col width=\\\"15%\\\">\\r\\n      <col width=\\\"10%\\\">\\r\\n      <col width=\\\"7%\\\">\\r\\n    </colgroup> -->\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <!-- <th style=\\\"text-align:center\\\">글 번호</th>\\r\\n        <th style=\\\"text-align:center\\\">제목</th>\\r\\n        <th style=\\\"text-align:center\\\">작성자</th>\\r\\n        <th style=\\\"text-align:center\\\">시작일</th>\\r\\n        <th style=\\\"text-align:center\\\">종료일</th>\\r\\n        <th style=\\\"text-align:center\\\">조회수</th> -->\\r\\n        <th class=\\\"col-xs-2 col-sm-1 col-md-1 col-lg-1\\\">글번호</th>\\r\\n        <th class=\\\"col-xs-2 col-sm-4 col-md-4 col-lg-4\\\">제목</th>\\r\\n        <th class=\\\"col-xs-2 col-sm-2 col-md-2 col-lg-2\\\">작성자</th>\\r\\n        <th class=\\\"col-xs-2 col-sm-2 col-md-2 col-lg-2\\\">시작일</th>\\r\\n        <th class=\\\"col-xs-2 col-sm-2 col-md-2 col-lg-2\\\">종료일</th>\\r\\n        <th class=\\\"col-xs-2 col-sm-1 col-md-1 col-lg-1\\\">조회수</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let c of canival | paginate: {itemsPerPage: 15,\\r\\n                                                currentPage: p}\\\">\\r\\n        <td>{{c.cid}}</td>\\r\\n        <td><a (click)=\\\"getCanivalDetail(c.cid)\\\">{{c.ctitle}}</a></td>\\r\\n        <td>관리자</td>\\r\\n        <td>{{c.csdate}}</td>\\r\\n        <td>{{c.cedate}}</td>\\r\\n        <td>{{c.cviewcnt}}</td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n  <div class=\\\"\\\">\\r\\n    <a class=\\\"btn btn-default pull-right\\\" [routerLink]=\\\"['/canival-write']\\\">글쓰기</a>\\r\\n  </div>\\r\\n  <div class=\\\"row text-center\\\">\\r\\n    <ul class=\\\"pagination\\\" style=\\\"\\\">\\r\\n      <pagination-controls (pageChange)=\\\"p = $event\\\"\\r\\n                            directionLinks=\\\"true\\\"\\r\\n                            autoHide=\\\"true\\\"\\r\\n                            previousLabel=\\\"\\\"\\r\\n                            nextLabel=\\\"\\\"\\r\\n                            screenReaderPaginationLabel=\\\"Pagination\\\"\\r\\n                            screenReaderPageLabel=\\\"page\\\"\\r\\n                            screenReaderCurrentLabel=\\\"You're on page\\\">\\r\\n      </pagination-controls>\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/canival/canival-view/canival-view.component.html\n// module id = ../../../../../src/app/canival/canival-view/canival-view.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { NgModule } from '@angular/core';\r\nimport { CanivalService } from '../../_services/canival.service';\r\nimport { Canival } from '../../_models/canival.model';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-canival-view',\r\n  templateUrl: './canival-view.component.html',\r\n  styleUrls: ['./canival-view.component.css']\r\n})\r\nexport class CanivalViewComponent implements OnInit {\r\n  canival: Canival[];\r\n\r\n  constructor(\r\n    private canivalService: CanivalService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getCanivalsView();\r\n  }\r\n\r\n  // 축제 리스트 보여주는 메소드\r\n  getCanivalsView() {\r\n    this.canivalService.getCanivalsView().subscribe(res => {\r\n      this.canival = res;\r\n    });\r\n  }\r\n\r\n  // 특정 축제 정보 보여주는 메소드\r\n  getCanivalDetail(cid: string) {\r\n    this.router.navigate([\"canival-detail\", cid]);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/canival/canival-view/canival-view.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/canival/canival-write/canival-write.component.css\n// module id = ../../../../../src/app/canival/canival-write/canival-write.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\r\\n  <form class=\\\"form-horizontal\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"title\\\" class=\\\"control-label col-xs-2\\\">제목</label>\\r\\n      <div class=\\\"col-xs-10\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"cTitle\\\" name=\\\"cTitle\\\" placeholder=\\\"축제 또는 행사명을 적어주세요\\\" required>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"writer\\\" class=\\\"control-label col-xs-2\\\">작성자</label>\\r\\n      <div class=\\\"col-xs-10\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"관리자\\\" required value=\\\"관리자\\\" readonly>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"control-label col-xs-2\\\" for=\\\"picture\\\">사진</label>\\r\\n      <div class=\\\"col-xs-10\\\">\\r\\n        <input type=\\\"file\\\" class=\\\"form-control\\\" (change)=\\\"selectFile($event)\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"content\\\" class=\\\"control-label col-xs-2\\\">내용</label>\\r\\n      <div class=\\\"col-xs-10\\\">\\r\\n        <textarea rows=\\\"20\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"cContent\\\" name=\\\"cContent\\\" placeholder=\\\"상세 내용을 적어주세요.\\\" required></textarea>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"title\\\" class=\\\"control-label col-xs-2\\\">시작일</label>\\r\\n      <div class=\\\"col-xs-10\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"cSdate\\\" name=\\\"cSdate\\\" placeholder=\\\"2017.11.08 처럼 적어주세요\\\" required>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"title\\\" class=\\\"control-label col-xs-2\\\">종료일</label>\\r\\n      <div class=\\\"col-xs-10\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"cEdate\\\" name=\\\"cEdate\\\" placeholder=\\\"2017.11.10 처럼 적어주세요\\\" required>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"col-xs-offset-2 col-xs-10\\\">\\r\\n        <a [routerLink]=\\\"['/canival-view']\\\" class=\\\"btn btn-primary\\\">목록</a>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" name=\\\"button\\\" [disabled]=\\\"f.invalid\\\">저장</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/canival/canival-write/canival-write.component.html\n// module id = ../../../../../src/app/canival/canival-write/canival-write.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CanivalService } from '../../_services/canival.service';\r\n\r\nimport { Member } from '../../_models/member.model'\r\n\r\n@Component({\r\n  selector: 'app-canival-write',\r\n  templateUrl: './canival-write.component.html',\r\n  styleUrls: ['./canival-write.component.css']\r\n})\r\nexport class CanivalWriteComponent implements OnInit {\r\n  session: string;\r\n  member: Member;\r\n  email: string;\r\n\r\n  cTitle: string;\r\n  cContent: string;\r\n  cSdate: string;\r\n  cEdate: string;\r\n\r\n  selectedFiles: FileList;\r\n  currentFileUpload: File;\r\n\r\n  constructor(\r\n    private canivalService: CanivalService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  selectFile(event) {\r\n    this.selectedFiles = event.target.files;\r\n  }\r\n\r\n  onSubmit(f) {\r\n    if (this.selectedFiles == undefined) {\r\n      alert(\"사진을 첨부해 주십시오.\");\r\n    }\r\n    else {\r\n      f.value.cImage = this.selectedFiles.item(0);\r\n      this.canivalService.postAddCanival(\r\n        f.value.cTitle,\r\n        f.value.cContent,\r\n        f.value.cSdate,\r\n        f.value.cEdate,\r\n        f.value.cImage,\r\n      ).subscribe(res => {\r\n        this.router.navigate([\"canival-detail\", res.json().cid]);\r\n      });\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/canival/canival-write/canival-write.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".rating {\\r\\n  -webkit-box-pack: start;\\r\\n      -ms-flex-pack: start;\\r\\n          justify-content: flex-start;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/favorites/favorites.component.css\n// module id = ../../../../../src/app/favorites/favorites.component.css\n// module chunks = main","module.exports = \"<div class=\\\"bs-example container\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <h3>{{member.mnickname}} 님의 즐겨찾기</h3>\\r\\n    <div *ngIf=\\\"message\\\" class=\\\"alert alert-info\\\">{{message}}</div>\\r\\n    <div  class=\\\"col-md-6\\\" *ngFor=\\\"let h of hotlistDetail  | paginate: {itemsPerPage: 5,\\r\\n                                                                        currentPage: p}\\\">\\r\\n      <div class=\\\"panel panel-default\\\">\\r\\n        <div class=\\\"panel-heading\\\" >\\r\\n          즐겨찾기 번호: {{h.hid}}\\r\\n          <div class=\\\"pull-right\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-xs btn-default\\\" (click)=\\\"getFoodTruck(h.tid)\\\">바로가기</button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\" >\\r\\n          <div class=\\\"col-sm-3\\\">\\r\\n            <img src=\\\"http://localhost:8080/image/{{h.timage}}\\\" alt=\\\"image X\\\" width=\\\"100px\\\" height=\\\"100px\\\">\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            가게이름 : {{h.tname}} <br>\\r\\n            <div class=\\\"rating label-left\\\">\\r\\n              <div class=\\\"lavel-value\\\">{{h.tavg}}</div>\\r\\n              <div class=\\\"star-container\\\">\\r\\n                <star-rating-comp\\r\\n                  [starType]=\\\"'svg'\\\"\\r\\n                  [hoverEnabled]=\\\"false\\\"\\r\\n                  [size]=\\\"'medium'\\\"\\r\\n                  [direction]=\\\"'ltr'\\\"\\r\\n                  [rating]=\\\"h.tavg\\\"\\r\\n                  [step]=\\\"0.1\\\"\\r\\n                  [showHalfStars]=\\\"true\\\"\\r\\n                  [readOnly]=\\\"true\\\">\\r\\n              </star-rating-comp>\\r\\n              </div>\\r\\n            </div>\\r\\n            주인장 한마디: {{h.tcomment}}<br>\\r\\n            영업시간: {{h.topen}} ~ {{h.tclose}}<br>\\r\\n            주소 : {{h.taddress}}<br>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"panel-footer clearfix\\\">\\r\\n          <div class=\\\"pull-right\\\">\\r\\n            <a [routerLink]=\\\"['/favorites']\\\" class=\\\"text-warning\\\" (click)=\\\"removeHotlist(h)\\\">\\r\\n              <span class=\\\"glyphicon glyphicon-remove\\\"></span>\\r\\n            </a>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row text-center\\\">\\r\\n    <ul class=\\\"pagination\\\" style=\\\"\\\">\\r\\n      <pagination-controls (pageChange)=\\\"p = $event\\\"\\r\\n                            directionLinks=\\\"true\\\"\\r\\n                            autoHide=\\\"true\\\"\\r\\n                            previousLabel=\\\"\\\"\\r\\n                            nextLabel=\\\"\\\"\\r\\n                            screenReaderPaginationLabel=\\\"Pagination\\\"\\r\\n                            screenReaderPageLabel=\\\"page\\\"\\r\\n                            screenReaderCurrentLabel=\\\"You're on page\\\">\\r\\n      </pagination-controls>\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/favorites/favorites.component.html\n// module id = ../../../../../src/app/favorites/favorites.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { HotlistService } from '../_services/hotlist.service';\r\n\r\nimport { Hotlist } from '../_models/hotlist.model';\r\nimport { Member } from '../_models/member.model';\r\nimport { HotlistDetail } from '../_models/hotlistdetail.model';\r\n\r\n@Component({\r\n  selector: 'app-favorites',\r\n  templateUrl: './favorites.component.html',\r\n  styleUrls: ['./favorites.component.css']\r\n})\r\nexport class FavoritesComponent implements OnInit {\r\n  // hotlist: Hotlist[];\r\n  hotlistDetail: HotlistDetail[];\r\n  // trucks: Truck[];\r\n\r\n  member: Member;\r\n  session: string;\r\n  errorMessage: string;\r\n  message: string;\r\n\r\n  constructor(private hotlistService: HotlistService, private http: Http, private router:Router) {\r\n    this.session = sessionStorage.getItem('member');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getHotlistDetail();\r\n  }\r\n\r\n  getHotlistDetail() {\r\n    if (this.session !== null) {\r\n      this.member = JSON.parse(this.session);\r\n    }\r\n    this.hotlistService.getHotlistDetail()\r\n      .subscribe(result => {\r\n        // console.log('hotlist detail='+result);\r\n        this.hotlistDetail = result;\r\n      });\r\n  }\r\n\r\n  removeHotlist(hotlistdetail: HotlistDetail) {\r\n    this.hotlistService.removeHotlist(hotlistdetail)\r\n      .subscribe(result => {\r\n        console.log('hotlist remove = '+ result);\r\n        this.message = result;\r\n        this.getHotlistDetail();\r\n      });\r\n  }\r\n\r\n  getFoodTruck(tid: string) {\r\n    console.log(tid);\r\n    this.router.navigate([\"truck-info\", tid]);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/favorites/favorites.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"agm-map {\\r\\n    height: 700px;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/google-map/google-map.component.css\n// module id = ../../../../../src/app/google-map/google-map.component.css\n// module chunks = main","module.exports = \"<div class=\\\"w3-container w3-content\\\" style=\\\"max-width:1400px;margin-top:80px\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n\\r\\n    <!-- <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">My Google Maps</a>\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\r\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n  <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n  <li class=\\\"nav-item active\\\">\\r\\n  <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\r\\n</li>\\r\\n<li class=\\\"nav-item\\\">\\r\\n<a class=\\\"nav-link\\\" href=\\\"#\\\">Link</a>\\r\\n</li>\\r\\n</ul>\\r\\n<form class=\\\"form-inline my-2 my-lg-0\\\">\\r\\n<input class=\\\"form-control\\\" style=\\\"width: 450px;\\\" #search placeholder=\\\"search for location\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"off\\\"\\r\\ntype=\\\"text\\\">\\r\\n</form>\\r\\n<button type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"saveLocal()\\\">현재 위치 마커</button>\\r\\n</div>\\r\\n</nav> -->\\r\\n\\r\\n<agm-map [latitude]=\\\"latitude\\\" [longitude]=\\\"longitude\\\" [scrollwheel]=\\\"true\\\" [zoom]=\\\"zoom\\\" (mapClick)=\\\"mapClick($event)\\\" #gm>\\r\\n  <agm-marker *ngFor=\\\"let truck of trucks; let i = index\\\" [latitude]=\\\"truck.tlat\\\" [longitude]=\\\"truck.tlng\\\" (markerClick)=\\\"gm.lastOpen?.close(); gm.lastOpen = infoWindow; clickedMarker(truck, i)\\\">\\r\\n    <agm-info-window [disableAutoPan]=\\\"true\\\" #infoWindow>\\r\\n      <div class=\\\"\\\">\\r\\n        <strong>{{truck.tname}}</strong>\\r\\n        <div class=\\\"\\\">\\r\\n          {{truck.tcomment}}<br>\\r\\n          Open : {{truck.topen}} ~ Close : {{truck.tclose}}\\r\\n        </div>\\r\\n        <button type=\\\"button\\\" (click)=\\\"getFoodTruck(truck.tid)\\\">바로가기</button>\\r\\n      </div>\\r\\n    </agm-info-window>\\r\\n  </agm-marker>\\r\\n</agm-map>\\r\\n\\r\\n\\r\\n<div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\r\\n  현재 지도 위치 : {{latitude}}, {{longitude}}\\r\\n</div>\\r\\n</div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/google-map/google-map.component.html\n// module id = ../../../../../src/app/google-map/google-map.component.html\n// module chunks = main","//npm install --save @agm/core 설치필요\r\nimport { Component, ElementRef, NgZone, OnInit, ViewChild } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AgmCoreModule, MapsAPILoader } from '@agm/core';\r\nimport { GoogleMapService } from '../_services/google-map.service';\r\nimport { Truck } from '../_models/truck.model';\r\n\r\ndeclare var google: any;\r\n\r\n@Component({\r\n  selector: 'app-google-map',\r\n  templateUrl: './google-map.component.html',\r\n  styleUrls: ['./google-map.component.css']\r\n})\r\nexport class GoogleMapComponent implements OnInit {\r\n\r\n  public trucks: Truck[] = [];\r\n  public latitude: number;\r\n  public longitude: number;\r\n  public searchControl: FormControl;\r\n  public zoom: number;\r\n  public mapTypeId: string;\r\n\r\n\r\n  public markers: Marker[] = [\r\n    {\r\n      latitude: 37.483038487116616,\r\n      longitude: 126.90061283105024,\r\n    }\r\n  ];\r\n\r\n  @ViewChild(\"search\")\r\n  public searchElementRef: ElementRef;\r\n\r\n  constructor(\r\n    private mapsAPILoader: MapsAPILoader,\r\n    private ngZone: NgZone,\r\n    private mapService: GoogleMapService,\r\n    private router: Router,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    //set google maps defaults\r\n    this.zoom = 16;\r\n    this.latitude = 39.8282;\r\n    this.longitude = -98.5795;\r\n    this.mapTypeId = 'roadmap'; // 'roadmap'|'hybrid'|'satellite'|'terrain'\r\n    //set current position\r\n    this.setCurrentPosition();\r\n    this.getAllTrucks();\r\n    //load Places Autocomplete\r\n    // this.mapsAPILoader.load().then(() => {\r\n    //   let autocomplete = new google.maps.places.Autocomplete(this.searchElementRef.nativeElement, {\r\n    //     types: [\"geocode\"]\r\n    //   });\r\n    //   autocomplete.addListener(\"place_changed\", () => {\r\n    //     this.ngZone.run(() => {\r\n    //       //get the place result\r\n    //       let place: google.maps.places.PlaceResult = autocomplete.getPlace();\r\n    //\r\n    //       //verify result\r\n    //       if (place.geometry === undefined || place.geometry === null) {\r\n    //         return;\r\n    //       }\r\n    //\r\n    //       //set latitude, longitude and zoom\r\n    //       this.latitude = place.geometry.location.lat();\r\n    //       this.longitude = place.geometry.location.lng();\r\n    //       this.zoom = 16;\r\n    //     });\r\n    //   });\r\n    // });\r\n  }\r\n\r\n  private mapClick(event: any) {\r\n    console.log(\"mapClick called : \" + event.coords);\r\n    this.latitude = event.coords.lat;\r\n    this.longitude = event.coords.lng;\r\n  }\r\n\r\n  private setCurrentPosition() {\r\n    console.log('set='+ navigator);\r\n    console.log('set='+ navigator.geolocation.getCurrentPosition);\r\n    if (\"geolocation\" in navigator) {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n\r\n        this.latitude = position.coords.latitude;\r\n        console.log('lat'+this.latitude)\r\n        this.longitude = position.coords.longitude;\r\n        console.log('lng'+this.longitude)\r\n        this.zoom = 16;\r\n        console.log(position.coords);\r\n      });\r\n    }\r\n  }\r\n\r\n  getAllTrucks() {\r\n    this.mapService.getTruckAllList().subscribe(trucks => {\r\n      for (let i = 0; i < trucks.length; i++) {\r\n        this.trucks.push(trucks[i]);\r\n      }\r\n    }\r\n    );\r\n    console.log(this.trucks);\r\n  }\r\n\r\n\r\n  saveLocal() {\r\n    console.log(navigator.geolocation.getCurrentPosition)\r\n  }\r\n\r\n  clickedMarker(marker: Marker, index: number) {\r\n    console.log(marker);\r\n  }\r\n\r\n  getFoodTruck(tid: string) {\r\n    console.log(tid);\r\n    this.router.navigate([\"truck-info\", tid]);\r\n  }\r\n}\r\n\r\n// just an interface for type safety.\r\ninterface Marker {\r\n  latitude: number;\r\n  longitude: number;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/google-map/google-map.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/join-page/join-page.component.css\n// module id = ../../../../../src/app/join-page/join-page.component.css\n// module chunks = main","module.exports = \"<p>\\r\\n  join-page works!\\r\\n</p>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"col-md-6 col-md-offset-3\\\">\\r\\n    <h2>회원가입</h2>\\r\\n    <form name=\\\"form\\\" (ngSubmit)=\\\"onSubmit(f)\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': f.submitted && !email.valid  }\\\">\\r\\n        <label for=\\\"email\\\">이메일</label>\\r\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\"  name=\\\"email\\\" placeholder=\\\"Email\\\" required pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\">\\r\\n        <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-danger\\\">{{errorMessage}}</div>\\r\\n        <!-- <div *ngIf=\\\"f.submitted && !email.valid && errorMessage\\\" class=\\\"help-block\\\">Email is required</div> -->\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\" >\\r\\n        <label for=\\\"password\\\">비밀번호</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\"  name=\\\"password\\\" placeholder=\\\"password\\\" required>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\" >\\r\\n        <label for=\\\"nickname\\\">닉네임</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"nickname\\\"  name=\\\"nickname\\\" placeholder=\\\"name\\\" required>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-check form-check-inline\\\">\\r\\n        <label class=\\\"form-check-label\\\">\\r\\n          <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"registype\\\" [(ngModel)]=\\\"registype\\\" id=\\\"inlineRadio1\\\" value=\\\"1\\\"> 일반회원(1)\\r\\n        </label>\\r\\n      </div>\\r\\n      <div class=\\\"form-check form-check-inline\\\">\\r\\n        <label class=\\\"form-check-label\\\">\\r\\n          <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"registype\\\" [(ngModel)]=\\\"registype\\\" id=\\\"inlineRadio2\\\" value=\\\"2\\\"> 사업자회원(2)\\r\\n        </label>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\">\\r\\n          <b class=\\\"glyphicon glyphicon-plus\\\"></b>SEND\\r\\n        </button>\\r\\n        <a [routerLink]=\\\"['/login-page']\\\" class=\\\"btn btn-link\\\">취소</a>\\r\\n      </div>\\r\\n\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/join-page/join-page.component.html\n// module id = ../../../../../src/app/join-page/join-page.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Member } from '../_models/member.model';\r\nimport { MemberService } from '../_services/member.service';\r\n\r\n@Component({\r\n  selector: 'app-join-page',\r\n  templateUrl: './join-page.component.html',\r\n  styleUrls: ['./join-page.component.css']\r\n})\r\nexport class JoinPageComponent implements OnInit {\r\n  model: any = {};\r\n  member: Member;\r\n  errorMessage: string;\r\n\r\n  constructor(private memberService: MemberService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit(f) {\r\n    if (f.valid) {\r\n      var member = f.value;\r\n      this.addMember(member.email, member.password, member.nickname, member.registype)\r\n    }\r\n  }\r\n\r\n  addMember(email: string, password: string, nickname: string, registype:number) {\r\n    console.log('registype='+registype)\r\n    this.memberService.addMember(email, password, nickname, registype)\r\n      .subscribe(res => {\r\n        let member = res;\r\n        if(member.merror !== null) {\r\n          this.errorMessage = member.merror;\r\n          console.log(this.errorMessage);\r\n        } else {\r\n          this.router.navigate(['/login-page']);\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/join-page/join-page.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".login-page {\\r\\n\\twidth: 360px;\\r\\n\\tpadding: 8% 0 0;\\r\\n\\tmargin: auto;\\r\\n}\\r\\n\\r\\n.form {\\r\\n\\tposition: relative;\\r\\n\\tz-index: 1;\\r\\n\\tbackground: #FFFFFF;\\r\\n\\tmax-width: 360px;\\r\\n\\tmargin: 0 auto 100px;\\r\\n\\tpadding: 45px;\\r\\n\\ttext-align: center;\\r\\n\\tbox-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24);\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/login-page/login-page.component.css\n// module id = ../../../../../src/app/login-page/login-page.component.css\n// module chunks = main","module.exports = \"<p>\\r\\n  login-page works!\\r\\n</p>\\r\\n<div class=\\\"login-page\\\">\\r\\n\\t<div class=\\\"form\\\">\\r\\n\\t\\t<form name=\\\"form\\\" class=\\\"login-form\\\" (ngSubmit)=\\\"f.form.valid && login(f)\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': f.submitted && !memail.valid }\\\">\\r\\n        <label for=\\\"memail\\\">Email</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"memail\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"model.memail\\\" #memail=\\\"ngModel\\\"  required />\\r\\n        <div *ngIf=\\\"f.submitted && !memail.valid\\\" class=\\\"help-block\\\">Email is required</div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': f.submitted && !mpassword.valid }\\\">\\r\\n        <label for=\\\"mpassword\\\">Password</label>\\r\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"mpassword\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"model.mpassword\\\" #mpassword=\\\"ngModel\\\" required />\\r\\n        <div *ngIf=\\\"f.submitted && !mpassword.valid\\\" class=\\\"help-block\\\">Password is required</div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n          <button class=\\\"btn btn-primary\\\" [disabled]=\\\"f.invalid\\\">Login</button>\\r\\n      </div>\\r\\n      <p class=\\\"message\\\">Not registered? <a href=\\\"#\\\">Create an account</a></p>\\r\\n      <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger\\\">{{error}}</div>\\r\\n\\t\\t</form>\\r\\n\\t</div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/login-page/login-page.component.html\n// module id = ../../../../../src/app/login-page/login-page.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Member } from '../_models/member.model';\r\n\r\nimport { AuthenticationService } from '../_services/authentication.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.css']\r\n})\r\nexport class LoginPageComponent implements OnInit {\r\n  model: any = {};\r\n  error = '';\r\n  session: string;\r\n\r\n  constructor(private authService: AuthenticationService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  login(f) {\r\n    this.authService.login(this.model.memail, this.model.mpassword)\r\n      .then(result => {\r\n        console.log('login log = '+ result)\r\n        let member = JSON.parse(result) as Member;\r\n        console.log('login member = '+member.memail)\r\n        if(member.merror === null) {\r\n          this.session = sessionStorage.getItem('member');\r\n          this.authService.checkTruck(this.model.memail);\r\n          this.router.navigate(['/']);\r\n        } else {\r\n          this.session = null;\r\n          this.error = member.merror;\r\n        }\r\n        // if(result === \"fail\") {\r\n        //   this.session = null;\r\n        //   this.error = \"login fail\";\r\n        // } else {\r\n        //   // console.log(\"login component  success = \" + result);\r\n        //   this.session = sessionStorage.getItem('member');\r\n        //   this.router.navigate(['/']);\r\n        // }\r\n      });\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/login-page/login-page.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"footer {\\r\\n  background-color: #f2f2f2;\\r\\n  padding: 25px;\\r\\n}\\r\\n\\r\\n.carousel-inner img {\\r\\n  width: 100%;\\r\\n  height: 80%;\\r\\n  margin: auto;\\r\\n  min-height: 200px;\\r\\n\\r\\n}\\r\\n\\r\\n.service-description {\\r\\n  margin: 20px 0px 20px 0px;\\r\\n}\\r\\n\\r\\n/* Hide the carousel text when the screen is less than 600 pixels wide */\\r\\n\\r\\n@media (max-width: 600px) {\\r\\n  .carousel-caption {\\r\\n    display: none;\\r\\n  }\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/main-home/main-home.component.css\n// module id = ../../../../../src/app/main-home/main-home.component.css\n// module chunks = main","module.exports = \"<div id=\\\"myCarousel\\\" class=\\\"carousel slide\\\" data-ride=\\\"carousel\\\">\\r\\n  <!-- Indicators -->\\r\\n  <ol class=\\\"carousel-indicators\\\">\\r\\n    <li data-target=\\\"#myCarousel\\\" data-slide-to=\\\"0\\\" class=\\\"active\\\"></li>\\r\\n    <li data-target=\\\"#myCarousel\\\" data-slide-to=\\\"1\\\"></li>\\r\\n    <li data-target=\\\"#myCarousel\\\" data-slide-to=\\\"2\\\"></li>\\r\\n  </ol>\\r\\n\\r\\n  <!-- Wrapper for slides -->\\r\\n  <div class=\\\"carousel-inner\\\" role=\\\"listbox\\\">\\r\\n    <div class=\\\"item active\\\">\\r\\n      <img src=\\\"http://localhost:8080/image/truck/truck_image1.jpg\\\" alt=\\\"Image\\\">\\r\\n      <div class=\\\"carousel-caption\\\">\\r\\n        <h3>food truck</h3>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"item\\\">\\r\\n      <img src=\\\"http://localhost:8080/image/truck/truck_image2.jpg\\\" alt=\\\"Image\\\">\\r\\n      <div class=\\\"carousel-caption\\\">\\r\\n        <h3>food truck</h3>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"item\\\">\\r\\n      <img src=\\\"http://localhost:8080/image/truck/truck_image3.jpg\\\" alt=\\\"Image\\\">\\r\\n      <div class=\\\"carousel-caption\\\">\\r\\n        <h3>food truck</h3>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Left and right controls -->\\r\\n  <a class=\\\"left carousel-control\\\" href=\\\"#myCarousel\\\" role=\\\"button\\\" data-slide=\\\"prev\\\">\\r\\n      <span class=\\\"glyphicon glyphicon-chevron-left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n      <span class=\\\"sr-only\\\">Previous</span>\\r\\n    </a>\\r\\n  <a class=\\\"right carousel-control\\\" href=\\\"#myCarousel\\\" role=\\\"button\\\" data-slide=\\\"next\\\">\\r\\n      <span class=\\\"glyphicon glyphicon-chevron-right\\\" aria-hidden=\\\"true\\\"></span>\\r\\n      <span class=\\\"sr-only\\\">Next</span>\\r\\n    </a>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container text-center\\\">\\r\\n  <!-- <h3>FoodTruck 제공 기능</h3><br> -->\\r\\n  <br><br>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-4 service-description\\\">\\r\\n      <a [routerLink]=\\\"['/truck-map']\\\"><i class=\\\"fa fa-map-marker fa-5x\\\" aria-hidden=\\\"true\\\"></i></a><br>\\r\\n      <h4><strong>트럭지도</strong></h4>\\r\\n      <p>\\r\\n        현재 위치를 기반으로 <br>\\r\\n        등록된 푸드트럭의 위치를 제공합니다\\r\\n      </p>\\r\\n      <!-- <img src=\\\"https://placehold.it/150x80?text=IMAGE\\\" class=\\\"img-responsive\\\" style=\\\"width:100%\\\" alt=\\\"Image\\\"> -->\\r\\n      <!-- <button type=\\\"button\\\" class=\\\"submit\\\" routerLink=\\\"truck-map\\\">트럭지도</button> -->\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 service-description\\\">\\r\\n      <a [routerLink]=\\\"['/truck-list']\\\"><i class=\\\"fa fa-th-list fa-5x\\\" aria-hidden=\\\"true\\\"></i></a><br>\\r\\n      <h4><strong>트럭리스트</strong></h4>\\r\\n      <p>\\r\\n        모든 트럭을 리스트 형식으로 보고 <br>\\r\\n        주소 검색을 제공합니다.\\r\\n      </p>\\r\\n      <!-- <img src=\\\"https://placehold.it/150x80?text=IMAGE\\\" class=\\\"img-responsive\\\" style=\\\"width:100%\\\" alt=\\\"Image\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"submit\\\" routerLink=\\\"favorites\\\">나의즐겨찾기</button> -->\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 service-description\\\">\\r\\n      <a [routerLink]=\\\"['/canival-view']\\\"><i class=\\\"fa fa-calendar fa-5x\\\" aria-hidden=\\\"true\\\"></i></a><br>\\r\\n      <h4><strong>축제정보</strong></h4>\\r\\n      <p>\\r\\n        서울지역에 있는 축제 정보를 제공합니다.<br><br>\\r\\n      </p>\\r\\n      <!-- <img src=\\\"https://placehold.it/150x80?text=IMAGE\\\" class=\\\"img-responsive\\\" style=\\\"width:100%\\\" alt=\\\"Image\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"submit\\\" routerLink=\\\"truck-list\\\">트럭리스트</button> -->\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 service-description\\\" *ngIf=\\\"session\\\">\\r\\n      <a [routerLink]=\\\"['/reviews']\\\"><i class=\\\"fa fa-commenting fa-5x\\\" aria-hidden=\\\"true\\\"></i></a><br>\\r\\n      <h4><strong>나의리뷰</strong></h4>\\r\\n      <p>\\r\\n        내의 리뷰를 모두 볼 수 있습니다.<br><br>\\r\\n      </p>\\r\\n      <!-- <img src=\\\"https://placehold.it/150x80?text=IMAGE\\\" class=\\\"img-responsive\\\" style=\\\"width:100%\\\" alt=\\\"Image\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"submit\\\" routerLink=\\\"reviews\\\">나의리뷰</button> -->\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 service-description\\\" *ngIf=\\\"session\\\">\\r\\n      <a [routerLink]=\\\"['/favorites']\\\"><i class=\\\"fa fa-gratipay fa-5x\\\" aria-hidden=\\\"true\\\"></i></a><br>\\r\\n      <h4><strong>나의즐겨찾기</strong></h4>\\r\\n      <p>\\r\\n        트럭을 즐겨찾기 할 수 있습니다.<br><br>\\r\\n      </p>\\r\\n      <!-- <img src=\\\"https://placehold.it/150x80?text=IMAGE\\\" class=\\\"img-responsive\\\" style=\\\"width:100%\\\" alt=\\\"Image\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"submit\\\" routerLink=\\\"canival-view\\\">축제정보</button> -->\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 service-description\\\">\\r\\n      <a [routerLink]=\\\"['/support']\\\"><i class=\\\"fa fa-question-circle fa-5x\\\" aria-hidden=\\\"true\\\"></i></a><br>\\r\\n      <h4><strong>고객센터</strong></h4>\\r\\n      <p>\\r\\n        문의글을 남겨주세요. <br>\\r\\n      </p>\\r\\n      <!-- <img src=\\\"https://placehold.it/150x80?text=IMAGE\\\" class=\\\"img-responsive\\\" style=\\\"width:100%\\\" alt=\\\"Image\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"submit\\\" routerLink=\\\"support\\\">고객센터</button> -->\\r\\n    </div>\\r\\n  </div>\\r\\n</div><br>\\r\\n\\r\\n<footer class=\\\"container-fluid text-center\\\">\\r\\n  <span><i class=\\\"fa fa-comments-o fa-1x\\\" aria-hidden=\\\"true\\\"></i> food truck</span>\\r\\n</footer>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/main-home/main-home.component.html\n// module id = ../../../../../src/app/main-home/main-home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { RouterLink } from '@angular/router'\r\n\r\n@Component({\r\n  selector: 'app-main-home',\r\n  templateUrl: './main-home.component.html',\r\n  styleUrls: ['./main-home.component.css']\r\n})\r\nexport class MainHomeComponent implements OnInit {\r\n  session: string;\r\n\r\n  constructor() {\r\n    this.session = sessionStorage.getItem('member');\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/main-home/main-home.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/member-profile/member-profile.component.css\n// module id = ../../../../../src/app/member-profile/member-profile.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"col-md-6 col-md-offset-3\\\">\\r\\n    <h2>회원 정보 수정</h2>\\r\\n    <form name=\\\"form\\\" (ngSubmit)=\\\"onSubmit(f)\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n      <div class=\\\"form-group\\\" >\\r\\n        <label for=\\\"email\\\">이메일</label>\\r\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"member.memail\\\" id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Email\\\" required pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" readonly=\\\"readonly\\\" value=\\\"{{member.memail}}\\\" >\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"password\\\">비밀번호</label>\\r\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"member.mpassword\\\" id=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"password\\\" required>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"nickname\\\">닉네임</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"member.mnickname\\\" id=\\\"nickname\\\" name=\\\"nickname\\\" placeholder=\\\"name\\\" required>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\">\\r\\n          <b class=\\\"glyphicon glyphicon-plus\\\"></b>저장\\r\\n        </button>\\r\\n        <a [routerLink]=\\\"['/main-home']\\\" class=\\\"btn btn-link\\\">취소</a>\\r\\n      </div>\\r\\n\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/member-profile/member-profile.component.html\n// module id = ../../../../../src/app/member-profile/member-profile.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Form } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { MemberService } from '../_services/member.service';\r\n\r\nimport { Member } from '../_models/member.model';\r\n\r\n@Component({\r\n  selector: 'app-member-profile',\r\n  templateUrl: './member-profile.component.html',\r\n  styleUrls: ['./member-profile.component.css']\r\n})\r\nexport class MemberProfileComponent implements OnInit {\r\n  private member: Member;\r\n\r\n  email:string;\r\n  password:string;\r\n  nickname:string;\r\n\r\n  constructor(\r\n    private memberService:MemberService,\r\n    private router:Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    if(sessionStorage.getItem('member')) {\r\n      this.member = JSON.parse(sessionStorage.getItem('member'));\r\n    }\r\n    console.log(this.member);\r\n  }\r\n\r\n  onSubmit(f) {\r\n    if(f.valid) {\r\n      this.memberService.modifyMember(this.member).subscribe(res => {\r\n          this.member = res;\r\n          sessionStorage.setItem('member', JSON.stringify(this.member));\r\n          console.log(sessionStorage.getItem('member'));\r\n          this.router.navigateByUrl(\"main-home\");\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/member-profile/member-profile.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/menu-list/menu-list.component.css\n// module id = ../../../../../src/app/menu-list/menu-list.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <h3>푸드리스트</h3>\\r\\n    <!-- 화면에 결과 메세지를 띄우고 싶을 때, 지금은 alert사용 -->\\r\\n    <div  class=\\\"col-md-4\\\" *ngFor=\\\"let f of foods\\\">\\r\\n      <div class=\\\"panel panel-default\\\">\\r\\n        <div class=\\\"panel-heading\\\" >음식 번호: {{f.fid}}</div>\\r\\n        <div class=\\\"panel-body\\\" >\\r\\n          <div class=\\\"col-sm-5 \\\" >\\r\\n            <img src=\\\"http://localhost:8080/image/{{f.fimage}}\\\" alt=\\\"img X\\\" width=\\\"120px\\\" height=\\\"120px\\\">\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-7 \\\">\\r\\n            <strong>{{f.fname}}</strong> <br>\\r\\n            {{f.fprice}} 원<br>\\r\\n            <div class=\\\"description\\\" style=\\\"font-size:0.8em\\\">\\r\\n              {{f.fdescription}}<br>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"panel-footer clearfix\\\" *ngIf=\\\"check()\\\">\\r\\n          <div class=\\\"pull-right\\\">\\r\\n            <a [routerLink]=\\\"['/truck-info', tid]\\\" class=\\\"text-warning\\\" (click)=\\\"removeFood(f)\\\">\\r\\n              <span class=\\\"glyphicon glyphicon-remove\\\"></span>\\r\\n            </a>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"\\\" *ngIf=\\\"check()\\\">\\r\\n    <form class=\\\"form-horizontal\\\" name=\\\"form\\\" (ngSubmit)=\\\"onSubmit(f)\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"name\\\" class=\\\"control-label col-xs-2\\\">이름</label>\\r\\n        <div class=\\\"col-xs-10\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"name\\\" required>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"price\\\" class=\\\"control-label col-xs-2\\\">가격</label>\\r\\n        <div class=\\\"col-xs-10\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"price\\\" name=\\\"price\\\" placeholder=\\\"price\\\" required>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"description\\\" class=\\\"control-label col-xs-2\\\">설명</label>\\r\\n        <div class=\\\"col-xs-10\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"description\\\" name=\\\"description\\\" placeholder=\\\"description\\\" required>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"sr-only\\\" class=\\\"control-label col-xs-2\\\" for=\\\"image\\\">사진</label>\\r\\n        <div class=\\\"col-xs-10\\\">\\r\\n          <input #myfile type=\\\"file\\\" class=\\\"form-control\\\" name=\\\"image\\\" (change)=\\\"selectFile($event)\\\">\\r\\n          <img *ngIf=\\\"preview\\\" src=\\\"{{url}}\\\" alt=\\\"\\\" width=\\\"120px\\\" height=\\\"120px\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"col-xs-offset-2 col-xs-10\\\">\\r\\n          <!-- <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-danger\\\">{{errorMessage}}</div> -->\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"f.invalid\\\">Add</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/menu-list/menu-list.component.html\n// module id = ../../../../../src/app/menu-list/menu-list.component.html\n// module chunks = main","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\n\r\nimport { FoodService } from '../_services/food.service';\r\nimport { Member } from '../_models/member.model';\r\nimport { Food } from '../_models/food.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-menu-list',\r\n  templateUrl: './menu-list.component.html',\r\n  styleUrls: ['./menu-list.component.css']\r\n})\r\nexport class MenuListComponent implements OnInit {\r\n  @Input('tid') tid: string;\r\n  @Input('tmember') tmember: string;\r\n\r\n  @ViewChild('myfile') myfile: any;\r\n\r\n  foods: object[] = [];\r\n\r\n  session: string;\r\n  email: string;\r\npreview:boolean=true;\r\n  name: string;\r\n  price: string;\r\n  description: string;\r\n\r\n  url: string;\r\n\r\n  selectedFiles: FileList;\r\n  // selectedFiles: any;\r\n  currentFileUpload: File;\r\n\r\n  constructor(private foodService: FoodService) {\r\n    this.session = sessionStorage.getItem('member');\r\n    console.log('top#component# constructor session=' + this.session);\r\n    if(this.session !== null) {\r\n      let member = JSON.parse(this.session) as Member;\r\n      this.email = member.memail;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.foodService.getObservable().subscribe(\r\n      messege => {\r\n        if (messege.result = 'ok') {\r\n          this.foodService.getAllfoods(this.tid).subscribe(res => {\r\n            console.log(res)\r\n            this.foods = res.json();\r\n          });\r\n        }\r\n      })\r\n    // this.foodServiceService.getAllfoods().subscribe(res => {\r\n    //   console.log(res.json())\r\n    //   this.foods = res.json();\r\n    // });\r\n    this.foodService.getAllfoods(this.tid).subscribe(res => {\r\n      console.log('foodtruck=='+res.text());\r\n      this.foods = res.json();\r\n      this.check();\r\n    });\r\n  }\r\n\r\n\r\n  //파일 추가할 때, 미리보기 기능\r\n  selectFile(event) {\r\n    this.preview=true;\r\n    this.selectedFiles = event.target.files;\r\n    if (event.target.files && event.target.files[0]) {\r\n      var reader = new FileReader();\r\n      reader.onload = (event:any) => {\r\n        this.url = event.target.result;\r\n      }\r\n      reader.readAsDataURL(event.target.files[0]);\r\n    }\r\n  }\r\n\r\n  onSubmit(f) {\r\n    if(this.selectedFiles === undefined) {\r\n      alert('사진을 등록하세요');\r\n    } else {\r\n      f.value.file = this.selectedFiles.item(0);\r\n      this.foodService.foodRegist(f.value.name, f.value.price, f.value.description, f.value.file, this.tid);\r\n      f.resetForm();\r\n      console.log(this.selectedFiles+\"/////////////////\");\r\n      this.preview=false;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  check() {\r\n    //트럭아이디로 주인 이메일을 찾기, 로그인한 아이디와 동일한지 체크\r\n    if(this.email === this.tmember) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  removeFood(food: Food) {\r\n    console.log('fff='+food.fname);\r\n    this.foodService.removeFood(food);\r\n  }\r\n\r\n  // removeHotlist(hotlistdetail: HotlistDetail) {\r\n  //   this.hotlistService.removeHotlist(hotlistdetail)\r\n  //     .subscribe(result => {\r\n  //       console.log('hotlist remove = '+ result);\r\n  //       this.message = result;\r\n  //       this.getHotlistDetail();\r\n  //     });\r\n  // }\r\n\r\n  // removeReview(review:Review) {\r\n  //   this.reviewService.removeReview(review)\r\n  //     .subscribe(result => {\r\n  //       // this.message = result;\r\n  //       alert(result);\r\n  //       this.getMyReview();\r\n  //     }\r\n  //   );\r\n  // }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/menu-list/menu-list.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".rating {\\r\\n  -webkit-box-pack: start;\\r\\n      -ms-flex-pack: start;\\r\\n          justify-content: flex-start;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/reviews/reviews.component.css\n// module id = ../../../../../src/app/reviews/reviews.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <h3>{{member.mnickname}} 님의 리뷰</h3>\\r\\n    <!-- 화면에 결과 메세지를 띄우고 싶을 때, 지금은 alert사용 -->\\r\\n    <!-- <div *ngIf=\\\"message\\\" class=\\\"alert alert-info\\\">{{message}}</div> -->\\r\\n    <div  class=\\\"col-md-12\\\" *ngFor=\\\"let r of myReviews  | paginate: {itemsPerPage: 5,\\r\\n                                                                    currentPage: p}\\\">\\r\\n      <div class=\\\"panel panel-default\\\">\\r\\n        <div class=\\\"panel-heading\\\" >리뷰 번호: {{r.rid}}</div>\\r\\n        <div class=\\\"panel-body\\\" >\\r\\n          <div class=\\\"col-md-2 col-sm-3\\\" *ngIf=\\\"r.rimage\\\">\\r\\n            <img src=\\\"http://localhost:8080/image/{{r.rimage}}\\\" alt=\\\"x\\\" width=\\\"120px\\\" height=\\\"120px\\\">\\r\\n          </div>\\r\\n          <div class=\\\"col-md-10 col-sm-9\\\">\\r\\n            해당트럭: {{r.rtruck}} <span style=\\\"color: gray; font-size: 0.7em\\\"> | 작성일: {{r.rdate}}</span><br>\\r\\n            <div class=\\\"rating\\\">\\r\\n              <div class=\\\"star-container\\\">\\r\\n                <star-rating-comp\\r\\n                  [starType]=\\\"'svg'\\\"\\r\\n                  [hoverEnabled]=\\\"false\\\"\\r\\n                  [staticColor]=\\\"'ok'\\\"\\r\\n                  [size]=\\\"'medium'\\\"\\r\\n                  [direction]=\\\"'ltr'\\\"\\r\\n                  [rating]=\\\"r.rscore\\\"\\r\\n                  [showHalfStars]=\\\"true\\\"\\r\\n                  [readOnly]=\\\"true\\\">\\r\\n              </star-rating-comp>\\r\\n              </div>\\r\\n            </div>\\r\\n            내용: {{r.rcomment}}<br>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row text-center\\\">\\r\\n    <ul class=\\\"pagination\\\" style=\\\"\\\">\\r\\n      <pagination-controls (pageChange)=\\\"p = $event\\\"\\r\\n                            directionLinks=\\\"true\\\"\\r\\n                            autoHide=\\\"true\\\"\\r\\n                            previousLabel=\\\"\\\"\\r\\n                            nextLabel=\\\"\\\"\\r\\n                            screenReaderPaginationLabel=\\\"Pagination\\\"\\r\\n                            screenReaderPageLabel=\\\"page\\\"\\r\\n                            screenReaderCurrentLabel=\\\"You're on page\\\">\\r\\n      </pagination-controls>\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/reviews/reviews.component.html\n// module id = ../../../../../src/app/reviews/reviews.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ReviewService } from '../_services/review.service';\r\n\r\n//npm install --save ngx-bar-rating 인스톨\r\n\r\nimport { Member } from '../_models/member.model';\r\nimport { Review } from '../_models/review.model';\r\n\r\n@Component({\r\n  selector: 'app-reviews',\r\n  templateUrl: './reviews.component.html',\r\n  styleUrls: ['./reviews.component.css']\r\n})\r\nexport class ReviewsComponent implements OnInit {\r\n  member: Member;\r\n  myReviews: Review[];\r\n\r\n  message: string;\r\n\r\n  constructor(private http: Http, private router:Router, private reviewService: ReviewService) {\r\n    var session = sessionStorage.getItem('member');\r\n    if (session !== null) {\r\n      this.member = JSON.parse(session);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getMyReview();\r\n  }\r\n\r\n  getMyReview() {\r\n    this.reviewService.getMyReview()\r\n      .subscribe(result => {\r\n        // console.log('reviewService myReviews='+result);\r\n        this.myReviews = result;\r\n      });\r\n  }\r\n\r\n  // onSubmit(f) {\r\n  //   if (f.valid) {\r\n  //     var r = f.value;\r\n  //     this.addReview(r.comment, r.image, r.score, this.member.memail, r.truck);\r\n  //   }\r\n  // }\r\n\r\n  //실제로 리뷰를 등록할 때는 해당 트럭의 트럭정보에 가서 리뷰를 입력.\r\n  //따라서 실제 서비스를 할 때 트럭아이디ㄴ는 아땋게 가져오나?\r\n  // addReview(comment:string, image:string, score:number, email:string, truck: number) {\r\n  //   this.reviewService.addReview(comment, image, score, email, truck)\r\n  //     .subscribe(res => {\r\n  //       console.log('addReview = '+res);\r\n  //         // this.message = res;\r\n  //         this.getMyReview();\r\n  //     });\r\n  // }\r\n\r\n  removeReview(review:Review) {\r\n    this.reviewService.removeReview(review)\r\n      .subscribe(result => {\r\n        // this.message = result;\r\n        alert(result);\r\n        this.getMyReview();\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/reviews/reviews.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".support-content {\\r\\n  padding: 10px 10px 10px 10px;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/support/support-detail/support-detail.component.css\n// module id = ../../../../../src/app/support/support-detail/support-detail.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\r\\n  <table class=\\\"table table-view\\\">\\r\\n    <!-- <colgroup>\\r\\n      <col width=\\\"7%\\\">\\r\\n      <col width=\\\"*\\\">\\r\\n      <col width=\\\"15%\\\">\\r\\n      <col width=\\\"10%\\\">\\r\\n      <col width=\\\"7%\\\">\\r\\n    </colgroup> -->\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th class=\\\"col-xs-7 col-sm-9 col-md-9 col-lg-9\\\">\\r\\n          <span><b>제목 :</b> {{title}}</span>\\r\\n        </th>\\r\\n        <th class=\\\"col-xs-5 col-sm-3 col-md-3 col-lg-3\\\">\\r\\n          <!-- <b>작성일 :</b> {{date}} -->\\r\\n          <span class=\\\"pull-right\\\"> {{date}} </span>\\r\\n        </th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr>\\r\\n        <td colspan=\\\"2\\\" class=\\\"text-right\\\" >\\r\\n          <b>작성자</b> : {{member}}\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td colspan=\\\"2\\\" height=\\\"500\\\" class=\\\"contents\\\">\\r\\n          <div class=\\\"support-content\\\">\\r\\n            {{content}}\\r\\n          </div>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n  <hr>\\r\\n  <div class=\\\"pull-right\\\">\\r\\n    <a [routerLink]=\\\"['/support']\\\" class=\\\"btn btn-default\\\">목록</a>\\r\\n    <a *ngIf=\\\"check()\\\" [routerLink]=\\\"['/support-update', sid]\\\" class=\\\"btn btn-primary\\\">수정</a>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/support/support-detail/support-detail.component.html\n// module id = ../../../../../src/app/support/support-detail/support-detail.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { SupportService } from '../../_services/support.service';\r\nimport { Router } from '@angular/router';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { Support } from '../../_models/support.model';\r\n\r\n@Component({\r\n  selector: 'app-support-detail',\r\n  templateUrl: './support-detail.component.html',\r\n  styleUrls: ['./support-detail.component.css']\r\n})\r\nexport class SupportDetailComponent implements OnInit {\r\n\r\n  support:object;\r\n  title:string;\r\n  date:string;\r\n  content:string;\r\n  member:string;\r\n\r\n  sid:string;\r\n  sub:any;\r\n\r\n  click: boolean=false;\r\n\r\n  constructor(private supportService:SupportService, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.sub = this.route.params.subscribe(params => {\r\n      this.sid = params['sid'];\r\n    });\r\n\r\n    this.supportService.getObservable().subscribe(res => {\r\n      console.log(res.result);\r\n      if(res.result2 === 'ok') {\r\n        this.supportService.getDetail(this.sid).subscribe(res=>{\r\n          console.log(res.json());\r\n          this.title = res.json().stitle;\r\n          this.date = res.json().sdate;\r\n          this.content = res.json().scontent;\r\n          this.member = res.json().smember;\r\n        });\r\n      }\r\n    });\r\n\r\n    this.supportService.getDetail(this.sid).subscribe(res=>{\r\n      console.log(res.json());\r\n      this.title = res.json().stitle;\r\n      this.date = res.json().sdate;\r\n      this.content = res.json().scontent;\r\n      this.member = res.json().smember;\r\n    });\r\n\r\n  }\r\n\r\n  //로그인한 사람과 글 작성자가 동일 인물인지 체크\r\n  check() {\r\n    let m = JSON.parse(sessionStorage.getItem('member'));\r\n    if(this.member === m.memail) {\r\n      console.log('check'+m.memail);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  //업데이트 버튼을 누르면 수정가능하게 해줌.\r\n  updateButton() {\r\n    this.click = !this.click;\r\n  }\r\n\r\n  //업데이트할 때, 데이터 보냄.\r\n  // submitForm(f) {\r\n  //   if(f.valid) {\r\n  //     this.click = !this.click;\r\n  //     this.updateSupport(f.value.sid, f.value.title, f.value.content);\r\n  //   }\r\n  // }\r\n  //\r\n  // updateSupport(sid, stitle, scontent) {\r\n  //   console.log(sid+\",\"+ stitle +\",\"+  scontent)\r\n  //   this.supportService.updateSupport(sid, stitle, scontent);\r\n  // }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/support/support-detail/support-detail.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/support/support-update/support-update.component.css\n// module id = ../../../../../src/app/support/support-update/support-update.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\r\\n  <form class=\\\"form-horizontal\\\"  #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\">\\r\\n    <div class=\\\"form-group\\\" hidden>\\r\\n\\t\\t\\t<label for=\\\"sid\\\" class=\\\"control-label col-xs-2\\\">ID</label>\\r\\n\\t\\t\\t<div class=\\\"col-xs-10\\\">\\r\\n\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"sid\\\" name=\\\"sid\\\" value=\\\"{{sid}}\\\" placeholder=\\\"sid\\\" required readonly>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"title\\\" class=\\\"control-label col-xs-2\\\">제목</label>\\r\\n      <div class=\\\"col-xs-10\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"title\\\" id=\\\"title\\\" name=\\\"title\\\" value=\\\"{{title}}\\\" placeholder=\\\"Title\\\" required>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"writer\\\" class=\\\"control-label col-xs-2\\\">작성자</label>\\r\\n      <div class=\\\"col-xs-10\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"writer\\\" name=\\\"writer\\\" placeholder=\\\"Writer\\\" required\\r\\n          value=\\\"{{member}}\\\" readonly>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"content\\\" class=\\\"control-label col-xs-2\\\">내용</label>\\r\\n      <div class=\\\"col-xs-10\\\">\\r\\n        <textarea class=\\\"form-control\\\" rows=\\\"20\\\" [(ngModel)]=\\\"content\\\" id=\\\"content\\\" name=\\\"content\\\" placeholder=\\\"Content\\\" required>{{content}}</textarea>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"regDate\\\" class=\\\"control-label col-xs-2\\\">작성일</label>\\r\\n      <div class=\\\"col-xs-10\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"regDate\\\" name=\\\"regDate\\\" placeholder=\\\"Date\\\" required\\r\\n        value=\\\"{{date}}\\\"readonly>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"col-xs-offset-2 col-xs-10\\\">\\r\\n        <a [routerLink]=\\\"['/support-detail', sid]\\\" class=\\\"btn btn-primary\\\">수정취소</a>\\r\\n        <button type=\\\"submit\\\"  class=\\\"btn btn-primary\\\">수정완료</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/support/support-update/support-update.component.html\n// module id = ../../../../../src/app/support/support-update/support-update.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { SupportService } from '../../_services/support.service';\r\nimport { Router } from '@angular/router';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { Support } from '../../_models/support.model';\r\n\r\n@Component({\r\n  selector: 'app-support-update',\r\n  templateUrl: './support-update.component.html',\r\n  styleUrls: ['./support-update.component.css']\r\n})\r\nexport class SupportUpdateComponent implements OnInit {\r\n\r\n  support: object;\r\n  title: string;\r\n  date: string;\r\n  content: string;\r\n  member: string;\r\n\r\n  sid: string;\r\n  sub: any;\r\n\r\n  click: boolean = false;\r\n\r\n  constructor(private supportService: SupportService, private route: ActivatedRoute, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.sub = this.route.params.subscribe(params => {\r\n      this.sid = params['sid'];\r\n    });\r\n    this.supportService.getDetail(this.sid).subscribe(res => {\r\n      console.log(res.json());\r\n      this.title = res.json().stitle;\r\n      this.date = res.json().sdate;\r\n      this.content = res.json().scontent;\r\n      this.member = res.json().smember;\r\n    });\r\n\r\n  }\r\n\r\n  //업데이트할 때, 데이터 보냄.\r\n  onSubmit(f) {\r\n    console.log(f.value)\r\n    if (f.valid) {\r\n      this.updateSupport(f.value.sid, f.value.title, f.value.content);\r\n    }\r\n  }\r\n\r\n  updateSupport(sid, stitle, scontent) {\r\n    console.log(sid + \",\" + stitle + \",\" + scontent)\r\n    this.supportService.updateSupport(sid, stitle, scontent);\r\n    this.router.navigate(['/support-detail', sid]);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/support/support-update/support-update.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/support/support-write/support-write.component.css\n// module id = ../../../../../src/app/support/support-write/support-write.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\r\\n  <h2>문의하기</h2>\\r\\n\\t<form class=\\\"form-horizontal\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\">\\r\\n\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t<label for=\\\"title\\\" class=\\\"control-label col-xs-2\\\">제목</label>\\r\\n\\t\\t\\t<div class=\\\"col-xs-10\\\">\\r\\n\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"title\\\" name=\\\"title\\\" placeholder=\\\"Title\\\" required>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t<label for=\\\"writer\\\" class=\\\"control-label col-xs-2\\\">작성자</label>\\r\\n\\t\\t\\t<div class=\\\"col-xs-10\\\">\\r\\n\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"writer\\\" value=\\\"{{member.memail}}\\\" required readonly>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t<label for=\\\"content\\\" class=\\\"control-label col-xs-2\\\">내용</label>\\r\\n\\t\\t\\t<div class=\\\"col-xs-10\\\">\\r\\n\\t\\t\\t\\t<textarea rows=\\\"20\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"content\\\" name=\\\"content\\\" placeholder=\\\"Content\\\" required></textarea>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t<div class=\\\"col-xs-offset-2 col-xs-10\\\">\\r\\n\\t\\t\\t\\t<a [routerLink]=\\\"['/support']\\\" class=\\\"btn btn-primary\\\">목록</a>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" name=\\\"button\\\">작성완료</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</form>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/support/support-write/support-write.component.html\n// module id = ../../../../../src/app/support/support-write/support-write.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { SupportService } from '../../_services/support.service';\r\n\r\nimport{Member} from '../../_models/member.model'\r\n\r\n@Component({\r\n  selector: 'app-support-write',\r\n  templateUrl: './support-write.component.html',\r\n  styleUrls: ['./support-write.component.css']\r\n})\r\nexport class SupportWriteComponent implements OnInit {\r\n  session: string;\r\n  member:Member;\r\n  email: string;\r\n  sid:string;\r\n\r\n\r\n  constructor(\r\n    private supportService: SupportService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.session = sessionStorage.getItem('member');\r\n    if(this.session !== null) {\r\n      this.member = JSON.parse(this.session);\r\n      this.email = this.member.memail;\r\n    }\r\n  }\r\n\r\n  onSubmit(f) {\r\n    console.log(f.value)\r\n    this.supportService.addSupport(f.value, this.member);\r\n\r\n    this.supportService.getObservable().subscribe(message=>{\r\n      if(message.result=='ok'){\r\n          this.supportService.getList();\r\n          this.router.navigate(['/support'])\r\n      }\r\n    })\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/support/support-write/support-write.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/support/support.component.css\n// module id = ../../../../../src/app/support/support.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\r\\n  <h2>고객센터</h2>\\r\\n  <table class=\\\"table table-hover\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th class=\\\"col-xs-2 col-sm-1 col-md-1 col-lg-1\\\">글번호</th>\\r\\n        <th class=\\\"col-xs-5 col-sm-6 col-md-6 col-lg-6\\\">제목</th>\\r\\n        <th class=\\\"col-xs-2 col-sm-2 col-md-2 col-lg-2\\\">작성자</th>\\r\\n        <th class=\\\"col-xs-2 col-sm-2 col-md-2 col-lg-2\\\">작성일</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let s of supports | paginate: {itemsPerPage: 15,\\r\\n                                                currentPage: p}\\\">\\r\\n        <td>{{s.sid}}</td>\\r\\n        <td><a [routerLink]=\\\"['/support-detail', s.sid]\\\">{{s.stitle}}</a></td>\\r\\n        <td>{{s.smember}}</td>\\r\\n        <td>{{s.sdate}}</td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n  <div class=\\\"\\\">\\r\\n    <a class=\\\"btn btn-default pull-right\\\" routerLink=\\\"write\\\">글쓰기</a>\\r\\n  </div>\\r\\n  <div class=\\\"row text-center\\\">\\r\\n    <ul class=\\\"pagination\\\" style=\\\"\\\">\\r\\n      <pagination-controls (pageChange)=\\\"p = $event\\\"\\r\\n                            directionLinks=\\\"true\\\"\\r\\n                            autoHide=\\\"true\\\"\\r\\n                            previousLabel=\\\"\\\"\\r\\n                            nextLabel=\\\"\\\"\\r\\n                            screenReaderPaginationLabel=\\\"Pagination\\\"\\r\\n                            screenReaderPageLabel=\\\"page\\\"\\r\\n                            screenReaderCurrentLabel=\\\"You're on page\\\">\\r\\n      </pagination-controls>\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"container\\\">\\r\\n  <!-- <star-rating-comp\\r\\n    [id]=\\\"starRatingConfig.id\\\"\\r\\n    [rating]=\\\"starRatingConfig.rating\\\"\\r\\n    [step]=\\\"starRatingConfig.step\\\"\\r\\n    [showHalfStars]=\\\"starRatingConfig.showHalfStars\\\"\\r\\n    [numOfStars]=\\\"starRatingConfig.numOfStars\\\"\\r\\n    [size]=\\\"starRatingConfig.size\\\"\\r\\n    [space]=\\\"starRatingConfig.space\\\"\\r\\n    [staticColor]=\\\"starRatingConfig.staticColor\\\"\\r\\n    [disabled]=\\\"starRatingConfig.disabled\\\"\\r\\n    [hoverEnabled]=\\\"starRatingConfig.hoverEnabled\\\"\\r\\n    [starType]=\\\"starRatingConfig.starType\\\"\\r\\n    [labelText]=\\\"starRatingConfig.labelText\\\"\\r\\n    [labelPosition]=\\\"starRatingConfig.labelPosition\\\"\\r\\n\\r\\n    [speed]=\\\"starRatingConfig.speed\\\"\\r\\n    [direction]=\\\"starRatingConfig.direction\\\"\\r\\n    [readOnly]=\\\"starRatingConfig.readOnly\\\"\\r\\n    [getColor]=\\\"starRatingConfig.getColor\\\"\\r\\n    [getHalfStarVisible]=\\\"starRatingConfig.getHalfStarVisible\\\"\\r\\n    (onHoverRatingChange)=\\\"starRatingConfig.onHoverRatingChange($event)\\\"\\r\\n    (onClick)=\\\"starRatingConfig.onClick($event)\\\"\\r\\n    (onRatingChange)=\\\"starRatingConfig.onRatingChange($event)\\\">\\r\\n</star-rating-comp> -->\\r\\n<hr>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/support/support.component.html\n// module id = ../../../../../src/app/support/support.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport {SupportService} from '../_services/support.service';\r\n\r\n@Component({\r\n  selector: 'app-support',\r\n  templateUrl: './support.component.html',\r\n  styleUrls: ['./support.component.css']\r\n})\r\nexport class SupportComponent implements OnInit {\r\n\r\n  supports: object[] = [];\r\n\r\n  rating = 0;\r\n\r\n  constructor(private supportService: SupportService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.supportService.getList().subscribe(res => {\r\n      console.log(res.json());\r\n      this.supports = res.json();\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/support/support.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/top-nav/top-nav.component.css\n// module id = ../../../../../src/app/top-nav/top-nav.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\r\\n\\t<div class=\\\"container-fluid\\\">\\r\\n\\t\\t<div class=\\\"navbar-header\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\"\\r\\n\\t\\t\\t\\tdata-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\">\\r\\n\\t\\t\\t\\t<span class=\\\"sr-only\\\">Toggle navigation</span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span>\\r\\n\\t\\t\\t\\t<span class=\\\"icon-bar\\\"></span>\\r\\n\\t\\t\\t</button>\\r\\n\\t\\t\\t<a class=\\\"navbar-brand\\\" routerLink=\\\"\\\">Home</a>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\r\\n\\t\\t\\t<ul class=\\\"nav navbar-nav\\\">\\r\\n        <li class=\\\"dropdown\\\"><a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\"\\r\\n\\t\\t\\t\\t\\taria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"><span class=\\\"badge\\\">메뉴</span> <span class=\\\"caret\\\"></span></a>\\r\\n\\t\\t\\t\\t\\t<ul class=\\\"dropdown-menu\\\">\\r\\n            <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"truck-map\\\">트럭지도</a></li>\\r\\n    \\t\\t\\t\\t<li routerLinkActive=\\\"active\\\"><a routerLink=\\\"truck-list\\\">트럭리스트</a></li>\\r\\n            <li routerLinkActive=\\\"active\\\" *ngIf=\\\"check2()\\\"><a routerLink=\\\"truck-regist\\\">트럭등록</a></li>\\r\\n            <li routerLinkActive=\\\"active\\\" *ngIf=\\\"check3()\\\"><a routerLink=\\\"truck-info/{{tid}}\\\">나의 트럭가기 tid: {{tid}}</a></li>\\r\\n            <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"canival-view\\\">축제</a></li>\\r\\n    \\t\\t\\t\\t<li routerLinkActive=\\\"active\\\"><a routerLink=\\\"support\\\">고객센터</a></li>\\r\\n\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t</ul>\\r\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n        <li role=\\\"separator\\\" class=\\\"divider\\\"></li>\\r\\n        <li *ngIf=\\\"!session\\\"><a routerLink=\\\"join-page\\\">join-page</a></li>\\r\\n        <li *ngIf=\\\"!session\\\"><a routerLink=\\\"login-page\\\">Login</a></li>\\r\\n\\r\\n        <li class=\\\"dropdown\\\" *ngIf=\\\"session\\\"><a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\"\\r\\n\\t\\t\\t\\t\\taria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"><span class=\\\"badge\\\">{{email}}</span> <span class=\\\"caret\\\"></span></a>\\r\\n\\t\\t\\t\\t\\t<ul class=\\\"dropdown-menu\\\">\\r\\n\\t\\t\\t\\t\\t\\t<li routerLinkActive=\\\"active\\\"><a routerLink=\\\"member-profile\\\">회원정보수정</a></li>\\r\\n\\t\\t\\t\\t\\t\\t<li routerLinkActive=\\\"active\\\"><a routerLink=\\\"favorites\\\">나의 즐겨찾기</a></li>\\r\\n\\t\\t\\t\\t\\t\\t<li routerLinkActive=\\\"active\\\"><a routerLink=\\\"reviews\\\">나의 리뷰</a></li>\\r\\n\\t\\t\\t\\t\\t\\t<li role=\\\"separator\\\" class=\\\"divider\\\"></li>\\r\\n            <li routerLinkActive=\\\"active\\\"><a href=\\\"/login-page\\\" (click)=\\\"logout()\\\"><b class=\\\"glyphicon glyphicon-log-out\\\"></b> logout</a></li>\\r\\n\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\r\\n      </ul>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</nav>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/top-nav/top-nav.component.html\n// module id = ../../../../../src/app/top-nav/top-nav.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { Member } from '../_models/member.model';\r\nimport { AuthenticationService } from '../_services/authentication.service';\r\nimport { TruckService } from '../_services/truck.service';\r\n\r\n@Component({\r\n  selector: 'app-top-nav',\r\n  templateUrl: './top-nav.component.html',\r\n  styleUrls: ['./top-nav.component.css']\r\n})\r\nexport class TopNavComponent implements OnInit {\r\n  session: string;\r\n  member: Member;\r\n  email: string;\r\n  registype: number;\r\n  check:string;\r\n  tid: string;\r\n\r\n\r\n  constructor(private authService: AuthenticationService, private router: Router, private truckService: TruckService) {\r\n    this.session = sessionStorage.getItem('member');\r\n    console.log('top#component# constructor session=' + this.session);\r\n    if(this.session !== null) {\r\n      let member = JSON.parse(this.session) as Member;\r\n      this.email = member.memail;\r\n      this.registype = member.mregistype;\r\n      console.log('check='+this.check)\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('top#component# ngOnInit() session=' + this.session);\r\n    //동적으로 top-nav의 session 적용\r\n    console.log('top ngOnInit() work')\r\n    this.authService.getObservable().subscribe(\r\n      massege=>{\r\n        if(massege.login='true'){\r\n          this.session = sessionStorage.getItem('member');\r\n          if(this.session !== null){\r\n            let member = JSON.parse(this.session) as Member;\r\n            // console.log('topnav='+member.memail);\r\n            this.email = member.memail;\r\n            this.registype = member.mregistype;\r\n          }\r\n        }\r\n      }\r\n    );\r\n    this.authService.getObservable2().subscribe(\r\n      message=>{\r\n        if(message.check === '0') {\r\n          this.check = message.check;\r\n        } else {\r\n          this.check = '1';\r\n          this.tid =JSON.parse(message.check).tid;\r\n          console.log(this.tid);\r\n        }\r\n    });\r\n    // this.truckService.getObservable().subscribe(\r\n    //   message => {\r\n    //     console.log(message.check);\r\n    //   }\r\n    // );\r\n    this.authService.checkTruck(this.email);\r\n  }\r\n\r\n  check2(){\r\n    if(this.check === '0' && this.registype===2){\r\n      return true;\r\n    } else{\r\n      return false;\r\n    }\r\n  }\r\n\r\n  check3(){\r\n    if(this.tid !== undefined){\r\n      // console.log(this.tid)\r\n      return true;\r\n    } else{\r\n      return false;\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    sessionStorage.removeItem('member');\r\n    this.session = null;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/top-nav/top-nav.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".tab-pane{\\r\\n  display: block;\\r\\n  height: 0;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\n.tab-pane.active{\\r\\n  height: auto;\\r\\n  overflow: visible;\\r\\n}\\r\\n.rating {\\r\\n  -webkit-box-pack: start;\\r\\n      -ms-flex-pack: start;\\r\\n          justify-content: flex-start; \\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/truck-info/truck-info.component.css\n// module id = ../../../../../src/app/truck-info/truck-info.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\r\\n  <h2>truck-info works!</h2>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div  class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"panel panel-default\\\">\\r\\n        <div class=\\\"panel-heading\\\">트럭 번호: {{tid}}\\r\\n          <div class=\\\"pull-right\\\" *ngIf=\\\"!check2()\\\">\\r\\n            <!-- <button type=\\\"button\\\" class=\\\"btn btn-xs btn-default\\\" *ngIf=\\\"check\\\" (click)=\\\"favorite(tid)\\\">즐겨찾기 추가</button> -->\\r\\n            <!-- <button type=\\\"button\\\" class=\\\"btn btn-xs btn-default\\\" *ngIf=\\\"!checkHot\\\" (click)=\\\"addHotlist(tid)\\\">즐겨찾기 추가</button> -->\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-xs btn-default\\\" *ngIf=\\\"!checkHot\\\" (click)=\\\"addHotlist(tid)\\\">즐겨찾기 추가</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-xs btn-default\\\"  *ngIf=\\\"checkHot\\\" >즐겨찾기 완료</button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\" >\\r\\n          <div class=\\\"col-sm-3\\\">\\r\\n            <img src=\\\"http://localhost:8080/image/{{timage}}\\\" alt=\\\"image X\\\" width=\\\"100px\\\" height=\\\"100px\\\">\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            가게: {{tname}}<br>\\r\\n            <div class=\\\"rating label-left\\\">\\r\\n              <div class=\\\"lavel-value\\\">{{tavg}}</div>\\r\\n              <div class=\\\"star-container\\\">\\r\\n                <star-rating-comp\\r\\n                  [starType]=\\\"'svg'\\\"\\r\\n                  [hoverEnabled]=\\\"false\\\"\\r\\n                  [size]=\\\"'medium'\\\"\\r\\n                  [direction]=\\\"'ltr'\\\"\\r\\n                  [rating]=\\\"tavg\\\"\\r\\n                  [step]=\\\"0.1\\\"\\r\\n                  [showHalfStars]=\\\"true\\\"\\r\\n                  [readOnly]=\\\"true\\\">\\r\\n              </star-rating-comp>\\r\\n              </div>\\r\\n            </div>\\r\\n            주인장 한마디: {{tcomment}}<br>\\r\\n            영업시간: {{topen}} ~ {{tclose}}<br>\\r\\n            주소: {{taddress}}<br>\\r\\n            주인: {{tmember}}<br>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"panel-footer clearfix\\\" *ngIf=\\\"check2()\\\">\\r\\n          <div class=\\\"pull-right\\\">\\r\\n            <button class=\\\"btn btn-default\\\" (click)=\\\"ngxSmartModalService.getModal('myModal').open() ; editTruck(f)\\\">트럭정보수정</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <hr><hr>\\r\\n  <ul class=\\\"nav nav-tabs\\\">\\r\\n    <li class=\\\"active\\\"><a data-toggle=\\\"tab\\\" href=\\\"#menu\\\">메뉴보기</a></li>\\r\\n    <li><a data-toggle=\\\"tab\\\" href=\\\"#reviews\\\">리뷰보기</a></li>\\r\\n    <li><a data-toggle=\\\"tab\\\" href=\\\"#location\\\">트럭위치</a></li>\\r\\n  </ul>\\r\\n  <div class=\\\"tab-content\\\">\\r\\n    <div id=\\\"menu\\\" class=\\\"tab-pane fade in active\\\">\\r\\n      <app-menu-list [tid]=\\\"tid\\\" [tmember]=\\\"tmember\\\"></app-menu-list>\\r\\n    </div>\\r\\n    <div id=\\\"reviews\\\" class=\\\"tab-pane fade\\\">\\r\\n      <app-truck-reviews [tid]=\\\"tid\\\"></app-truck-reviews>\\r\\n    </div>\\r\\n    <div id=\\\"location\\\" class=\\\"tab-pane fade\\\">\\r\\n      <p>트럭 위치</p>\\r\\n      <hr>\\r\\n      <agm-map [latitude]=\\\"tlat\\\" [longitude]=\\\"tlng\\\" [scrollwheel]=\\\"false\\\" [zoom]=\\\"16\\\"\\r\\n      [mapDraggable]=\\\"false\\\" [streetViewControl]=\\\"false\\\" [zoomControl]=\\\"false\\\"\\r\\n      style=\\\"width: 100%; height: 300px\\\">\\r\\n        <agm-marker [latitude]=\\\"tlat\\\" [longitude]=\\\"tlng\\\"></agm-marker>\\r\\n      </agm-map>\\r\\n      <hr>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- modal  -->\\r\\n<div class=\\\"container\\\">\\r\\n  <ngx-smart-modal #myModal [identifier]=\\\"'myModal'\\\">\\r\\n    <h2>트럭정보수정</h2>\\r\\n    <div class=\\\"\\\">\\r\\n      <form class=\\\"form-horizontal\\\" name=\\\"f\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n    \\t\\t\\t<label for=\\\"tname\\\" class=\\\"control-label col-xs-2\\\">이름</label>\\r\\n    \\t\\t\\t<div class=\\\"col-xs-10\\\">\\r\\n    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"tname\\\" name=\\\"tname\\\"  value=\\\"{{tname}}\\\" placeholder=\\\"tname\\\" required>\\r\\n    \\t\\t\\t</div>\\r\\n    \\t\\t</div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"tcomment\\\" class=\\\"control-label col-xs-2\\\">한마디</label>\\r\\n          <div class=\\\"col-xs-10\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"tcomment\\\" id=\\\"tcomment\\\" name=\\\"tcomment\\\" value=\\\"{{tcomment}}\\\" placeholder=\\\"tcomment\\\" required>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"topen\\\" class=\\\"control-label col-xs-2\\\">오픈시간</label>\\r\\n          <div class=\\\"col-xs-10\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"topen\\\" id=\\\"topen\\\" name=\\\"topen\\\"  value=\\\"{{topen}}\\\" placeholder=\\\"topen\\\" required>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"tclose\\\" class=\\\"control-label col-xs-2\\\">종료시간</label>\\r\\n          <div class=\\\"col-xs-10\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"tclose\\\" id=\\\"tclose\\\" name=\\\"tclose\\\" value=\\\"{{tclose}}\\\" placeholder=\\\"tclose\\\" required>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"control-label col-xs-2\\\" for=\\\"address\\\">위치</label>\\r\\n          <div class=\\\"col-xs-10\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"tlat\\\" value=\\\"{{tlat}}\\\" name=\\\"tlat\\\" placeholder=\\\"tlat\\\" required>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"tlng\\\" value=\\\"{{tlng}}\\\" name=\\\"tlng\\\" placeholder=\\\"tlng\\\" required>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"setCurrentPosition()\\\" name=\\\"button\\\">위치 등록</button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"timage\\\" class=\\\"control-label col-xs-2\\\">사진</label>\\r\\n          <div class=\\\"col-xs-10\\\">\\r\\n            <input type=\\\"file\\\" class=\\\"form-control\\\" (change)=\\\"selectFile($event)\\\" id=\\\"timage\\\" name=\\\"timage\\\" placeholder=\\\"timage\\\" required>\\r\\n            <img src=\\\"{{url}}\\\" alt=\\\"\\\" width=\\\"120px\\\" height=\\\"120px\\\">\\r\\n            <img *ngIf=\\\"!url\\\" src=\\\"http://localhost:8080/image/{{timage}}\\\" alt=\\\"\\\" width=\\\"120px\\\" height=\\\"120px\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-xs-offset-2 col-xs-10\\\">\\r\\n            <a (click)=\\\"myModal.close() ; clean()\\\" (onClose)=\\\"'hi'\\\" class=\\\"btn btn-primary\\\">수정취소</a>\\r\\n              <button type=\\\"submit\\\" (click)=\\\"myModal.close()\\\"  class=\\\"btn btn-primary\\\">수정완료</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </ngx-smart-modal>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/truck-info/truck-info.component.html\n// module id = ../../../../../src/app/truck-info/truck-info.component.html\n// module chunks = main","import { Component, OnInit, NgZone, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {FormGroup} from '@angular/forms';\r\nimport { AgmCoreModule, MapsAPILoader, AgmMap } from '@agm/core';\r\n\r\nimport { TruckService } from '../_services/truck.service';\r\nimport { ReviewService } from '../_services/review.service';\r\nimport { HotlistService } from '../_services/hotlist.service';\r\n\r\n//modal\r\nimport { NgxSmartModalService } from 'ngx-smart-modal';\r\nimport { AuthenticationService } from '../_services/authentication.service';\r\n\r\nimport { Truck } from '../_models/truck.model';\r\nimport { Member } from '../_models/member.model';\r\n\r\n@Component({\r\n  selector: 'app-truck-info',\r\n  templateUrl: './truck-info.component.html',\r\n  styleUrls: ['./truck-info.component.css']\r\n})\r\nexport class TruckInfoComponent implements OnInit {\r\n  // truck: Truck;\r\n\r\n  favolist: object[] = [];\r\n\r\n  //트럭정보\r\n  timage: string;\r\n  tname: string;\r\n  tcomment: string;\r\n  tavg: string;\r\n  topen: string;\r\n  tclose: string;\r\n  taddress: string;\r\n  tfoodmaterial: string;\r\n  tmember: string;\r\n  tlat: number;\r\n  tlng: number;\r\n\r\n  check: boolean = true;\r\n  //////////////////////////////min\r\n  checkHot: boolean = false;\r\n\r\n  tid: string;\r\n  sub: any;\r\n\r\n  currentFileUpload: File;\r\n\r\n  mapTypeId: string = \"roadmap\";\r\n\r\n  session: string;\r\n  member: Member;\r\n\r\n  f: FormGroup;\r\n  privew:boolean=false;\r\n  rename: string;\r\n  reimage: string;\r\n  recomment: string;\r\n  reopen: string;\r\n  reclose: string;\r\n  readdress: string;\r\n  refoodmaterial: string;\r\n  relat: number;\r\n  relng: number;\r\n\r\n  email: string;\r\n\r\n  @ViewChild(AgmMap)\r\n  public agmMap: AgmMap;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private truckService: TruckService,\r\n    private reviewService: ReviewService,\r\n    private ngZone: NgZone,\r\n    private hotlistService: HotlistService,\r\n    //modal\r\n    public ngxSmartModalService: NgxSmartModalService,\r\n    private authenticationService: AuthenticationService,\r\n    private router: Router,\r\n  ) {\r\n    this.session = sessionStorage.getItem('member');\r\n    if(this.session !== null) {\r\n      let member = JSON.parse(this.session) as Member;\r\n      this.email = member.memail;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.sub = this.route.params.subscribe(params => {\r\n      this.tid = params['tid'];\r\n      //트럭정보 초기에 불러오기\r\n      this.getTruckInfo(this.tid);\r\n      this.agmMap.triggerResize();\r\n    });\r\n\r\n\r\n    this.checkHotlist(this.tid, this.email);\r\n    this.truckService.getObservable().subscribe(message => {\r\n      console.log(message.check);\r\n      if (message.check === 'true') {\r\n        this.getTruckInfo(this.tid);\r\n        this.agmMap.triggerResize();\r\n        this.checkHotlist(this.tid, this.email);\r\n      }\r\n    });\r\n    //홍 - 즐겨찾기\r\n    // this.hotlistService.checkFavo(this.tid);\r\n\r\n\r\n    //민-즐겨찾기 추가시, 즐찾버튼삭제\r\n    this.hotlistService.getObservable().subscribe(result => {\r\n      if(result.favo === 'ok') {\r\n        this.checkHot = true;\r\n      }\r\n    });\r\n\r\n    //홍 - 즐겨찾기\r\n    // this.hotlistService.getObservable().subscribe(\r\n    //   message => {\r\n    //     console.log('check')\r\n    //     if (message.check == false) {\r\n    //       this.check = message.check;\r\n    //     }\r\n    //   }\r\n    // );\r\n\r\n    //별점을 줬을 때, 트럭평균별점 변경.\r\n    this.reviewService.getObservable().subscribe(message => {\r\n      console.log(message);\r\n      if (message.result == 'ok') {\r\n        this.getTruckInfo(this.tid);\r\n      }\r\n    });\r\n\r\n  } //end ngOnInit()\r\n\r\n  //주인인지 아닌지를 확인 -> 트럭수정버튼 확인\r\n  check2() {\r\n    if(this.email === this.tmember) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getTruckInfo(tid: string) {\r\n    this.truckService.getTruckInfo(tid).subscribe(result => {\r\n      console.log(result)\r\n      this.tname = result.tname;\r\n      this.timage = result.timage;\r\n      this.tavg = result.tavg;\r\n      this.tcomment = result.tcomment;\r\n      this.topen = result.topen;\r\n      this.tclose = result.tclose;\r\n      this.taddress = result.taddress;\r\n      this.tfoodmaterial = result.tfoodmaterial;\r\n      this.tmember = result.tmember;\r\n      this.tlat = parseFloat(result.tlat);\r\n      this.tlng = parseFloat(result.tlng);\r\n    });\r\n  }\r\n\r\n  //인홍 favorite추가\r\n  favorite(f) {\r\n    console.log(f);\r\n    this.hotlistService.addHotlist(f).subscribe(\r\n      () => { this.hotlistService.checkFavo(f); }\r\n    );\r\n  }\r\n\r\n  //민 - 즐겨찾기 insert\r\n  addHotlist(tid: string) {\r\n    console.log(tid);\r\n    this.hotlistService.addHotlist2(tid);\r\n  }\r\n\r\n  //민- 회면이 그려질때, 즉시 즐찾현황을 찾음\r\n  checkHotlist(tid: string, email: string) {\r\n    this.hotlistService.checkHotlist(tid, email);\r\n  }\r\n\r\n  //Modal\r\n  selectedFiles: FileList;\r\n  url: string;\r\n\r\n  selectFile(event) {\r\n    this.selectedFiles = event.target.files;\r\n    if (event.target.files && event.target.files[0]) {\r\n      var reader = new FileReader();\r\n      reader.onload = (event: any) => {\r\n        this.url = event.target.result;\r\n      }\r\n      reader.readAsDataURL(event.target.files[0]);\r\n    }\r\n  }\r\n\r\n  //트럭 정보 업데이트할 때, 데이터 보냄.\r\n  onSubmit(f) {\r\n    console.log(f.value)\r\n    if (this.selectedFiles === undefined) {\r\n      if (this.session !== null) {\r\n        this.member = JSON.parse(this.session);\r\n      }\r\n      // this.truckService.truckRegist(f.value.name, f.value.open, f.value.close, f.value.lat, f.value.lng, f.value.comment, f.value.file);\r\n      this.truckService.truckRegist2(\r\n        this.tid, f.value.tname, f.value.topen,\r\n        f.value.tclose, f.value.tlat, f.value.tlng,\r\n        f.value.tcomment, this.timage, this.member.memail\r\n      );\r\n\r\n      this.truckService.getObservable().subscribe(message => {\r\n        if (message.check == 'true') {\r\n          this.authenticationService.checkTruck(this.member.memail);\r\n          // alert('등록되었습니다.');\r\n          console.log('update되었음')\r\n          this.router.navigate(['/truck-info', this.tid]);\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      f.value.file = this.selectedFiles.item(0);\r\n      //3\r\n      if (this.session !== null) {\r\n        this.member = JSON.parse(this.session);\r\n      }\r\n\r\n      console.log(f.value);\r\n      // this.truckService.truckRegist(f.value.name, f.value.open, f.value.close, f.value.lat, f.value.lng, f.value.comment, f.value.file);\r\n      this.truckService.truckRegist3(this.tid, f.value.tname, f.value.topen, f.value.tclose,\r\n        f.value.tlat, f.value.tlng, f.value.tcomment, f.value.file, this.member.memail);\r\n\r\n      this.truckService.getObservable().subscribe(message => {\r\n        if (message.check == 'true') {\r\n          this.authenticationService.checkTruck(this.member.memail);\r\n          // alert('등록되었습니다.');\r\n          console.log('update되었음')\r\n          this.router.navigate(['/truck-info', this.tid]);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  editTruck(f) {\r\n    console.log(f.value);\r\n    this.rename = f.value.tname;\r\n    this.recomment = f.value.tcomment;\r\n    this.reopen = f.value.topen;\r\n    this.reclose = f.value.tclose;\r\n    this.relat = f.value.tlat;\r\n    this.relng = f.value.tlng;\r\n  }\r\n  clean(){\r\n    this.tname = this.rename;\r\n    this.tcomment = this.recomment ;\r\n    this.topen = this.reopen ;\r\n    this.tclose = this.reclose;\r\n    this.tlat =   this.relat;\r\n    this.tlng = this.relng;\r\n  }\r\n\r\n  //위치등록\r\n  private setCurrentPosition() {\r\n  if (\"geolocation\" in navigator) {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      this.tlat = position.coords.latitude;\r\n      this.tlng = position.coords.longitude;\r\n    });\r\n  }\r\n}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/truck-info/truck-info.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".rating {\\r\\n  -webkit-box-pack: start;\\r\\n      -ms-flex-pack: start;\\r\\n          justify-content: flex-start;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/truck-list/truck-list.component.css\n// module id = ../../../../../src/app/truck-list/truck-list.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\r\\n  <form class=\\\"form\\\" (ngSubmit)=\\\"search(f)\\\" #f=\\\"ngForm\\\">\\r\\n    <div class=\\\"input-group\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"key\\\" [(ngModel)]=\\\"key\\\" required placeholder=\\\"검색하실 주소를 입력해주세요.\\\">\\r\\n      <div class=\\\"input-group-btn\\\">\\r\\n        <button class=\\\"btn btn-default\\\">\\r\\n            <i class=\\\"glyphicon glyphicon-search\\\"></i>\\r\\n          </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n  <br>\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\" *ngFor=\\\"let t of trucks\\\">\\r\\n        <div class=\\\"panel panel-default\\\">\\r\\n          <div class=\\\"panel-heading\\\">\\r\\n            번호 {{t.tid}}\\r\\n            <div class=\\\"pull-right\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-xs btn-default\\\" (click)=\\\"getFoodTruck(t.tid)\\\">바로가기</button>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"panel-body\\\">\\r\\n            <div class=\\\"col-md-2 col-sm-3\\\">\\r\\n              <img src=\\\"http://localhost:8080/image/{{t.timage}}\\\" alt=\\\"\\\" width=\\\"150px\\\" height=\\\"150px\\\">\\r\\n            </div>\\r\\n            <div class=\\\"col-md-10 col-sm-9\\\">\\r\\n              이름: {{t.tname}}<br>\\r\\n              <div class=\\\"rating label-left\\\">\\r\\n                <div class=\\\"lavel-value\\\">{{t.tavg}}</div>\\r\\n                <div class=\\\"star-container\\\">\\r\\n                  <star-rating-comp\\r\\n                    [starType]=\\\"'svg'\\\"\\r\\n                    [hoverEnabled]=\\\"false\\\"\\r\\n                    [size]=\\\"'medium'\\\"\\r\\n                    [direction]=\\\"'ltr'\\\"\\r\\n                    [rating]=\\\"t.tavg\\\"\\r\\n                    [step]=\\\"0.1\\\"\\r\\n                    [showHalfStars]=\\\"true\\\"\\r\\n                    [readOnly]=\\\"true\\\">\\r\\n                </star-rating-comp>\\r\\n                </div>\\r\\n              </div>\\r\\n              영업시간: {{t.topen}} ~ {{t.tclose}}<br>\\r\\n              주소: {{t.taddress}}<br>\\r\\n              사업자: {{t.tmember}}<br>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/truck-list/truck-list.component.html\n// module id = ../../../../../src/app/truck-list/truck-list.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { NgModule } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { TruckService } from '../_services/truck.service'\r\n\r\n@Component({\r\n  selector: 'app-truck-list',\r\n  templateUrl: './truck-list.component.html',\r\n  styleUrls: ['./truck-list.component.css']\r\n})\r\nexport class TruckListComponent implements OnInit {\r\n\r\n  trucks: object[] = [\r\n  ];\r\n\r\n  currentFileUpload: File\r\n\r\n  constructor(\r\n    private truckService: TruckService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.truckService.truckgetAll().subscribe(res => {\r\n      console.log(res.json());\r\n      this.trucks = res.json()\r\n    });\r\n  }\r\n\r\n  search(f) {\r\n    console.log(f.value.key)\r\n    this.truckService.keyFind(f.value.key).subscribe(res => {\r\n      console.log(res.json());\r\n      // this.trucks=res.json();\r\n    });\r\n  }\r\n\r\n  getFoodTruck(tid: string) {\r\n    console.log(tid);\r\n    this.router.navigate([\"truck-info\", tid]);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/truck-list/truck-list.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/truck-regist/truck-regist.component.css\n// module id = ../../../../../src/app/truck-regist/truck-regist.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-6 col-md-offset-3\\\">\\r\\n    <form class=\\\"form-horizontal\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label col-xs-2\\\" for=\\\"email\\\">Name</label>\\r\\n        <div class=\\\"col-xs-10\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"name\\\" required>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label col-xs-2\\\" for=\\\"password\\\">Open</label>\\r\\n        <div class=\\\"col-xs-10\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"open\\\"  name=\\\"open\\\" placeholder=\\\"open\\\" required>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label col-xs-2\\\" for=\\\"name\\\">Close</label>\\r\\n        <div class=\\\"col-xs-10\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"close\\\" name=\\\"close\\\" placeholder=\\\"close\\\" required>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label col-xs-2\\\" for=\\\"address\\\">위치</label>\\r\\n        <div class=\\\"col-xs-10\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"lat\\\" value=\\\"{{lat}}\\\" name=\\\"lat\\\" placeholder=\\\"lat\\\" required>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"lng\\\" value=\\\"{{lng}}\\\" name=\\\"lng\\\" placeholder=\\\"lng\\\" required>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"setCurrentPosition()\\\" name=\\\"button\\\">위치 등록</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label col-xs-2\\\" for=\\\"comment\\\">소개글</label>\\r\\n        <div class=\\\"col-xs-10\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"comment\\\" name=\\\"comment\\\" placeholder=\\\"comment\\\" required>\\r\\n        </div>\\r\\n      </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"control-label col-xs-2\\\" for=\\\"picture\\\">사진</label>\\r\\n          <div class=\\\"col-xs-10\\\">\\r\\n            <input type=\\\"file\\\" (change)=\\\"selectFile($event)\\\" name=\\\"picture\\\" class=\\\"form-control\\\" required>\\r\\n            <img src=\\\"{{url}}\\\" alt=\\\"\\\" width=\\\"120px\\\" height=\\\"120px\\\">\\r\\n          </div>\\r\\n      </div>\\r\\n      <button class=\\\"btn btn-primary\\\"  [disabled]=\\\"f.invalid\\\">\\r\\n        <b class=\\\"glyphicon glyphicon-plus\\\"></b>SEND\\r\\n      </button>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n<ng-template #popTemplate>Here we go: <div [innerHtml]=\\\"html\\\"></div></ng-template>\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-success\\\"\\r\\n        [popover]=\\\"popTemplate\\\" popoverTitle=\\\"Dynamic html inside\\\">\\r\\n  Show me popover with html\\r\\n</button>\\r\\n<input type=\\\"text\\\" [popover]=\\\"popTemplate\\\"name=\\\"comment\\\" placeholder=\\\"comment\\\" required>\\r\\n<!-- <div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-6 col-md-offset-3\\\">\\r\\n    <form class=\\\"form-horizontal\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label col-xs-2\\\" for=\\\"email\\\">Name</label>\\r\\n        <div class=\\\"col-xs-10\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"name\\\" required>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label col-xs-2\\\" for=\\\"name\\\">open</label>\\r\\n        <div class=\\\"col-xs-10\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"open\\\" name=\\\"open\\\" placeholder=\\\"open\\\" required>\\r\\n          <timepicker\\r\\n          [(ngModel)]=\\\"opentime\\\"\\r\\n          [hourStep]=\\\"1\\\"\\r\\n          [minuteStep]=\\\"10\\\"\\r\\n          [showMeridian]=\\\"ismeridian\\\"\\r\\n          [readonlyInput]=\\\"!isEnabled\\\"\\r\\n          ></timepicker>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label col-xs-2\\\" for=\\\"name\\\">Close</label>\\r\\n        <div class=\\\"col-xs-10\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"close\\\" name=\\\"close\\\" placeholder=\\\"close\\\" required>\\r\\n          <timepicker\\r\\n          [(ngModel)]=\\\"closetime\\\"\\r\\n          [hourStep]=\\\"1\\\"\\r\\n          [minuteStep]=\\\"10\\\"\\r\\n          [showMeridian]=\\\"ismeridian\\\"\\r\\n          [readonlyInput]=\\\"!isEnabled\\\"\\r\\n          ></timepicker>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label col-xs-2\\\" for=\\\"address\\\">위치</label>\\r\\n        <div class=\\\"col-xs-10\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"lat\\\" value=\\\"{{lat}}\\\" name=\\\"lat\\\" placeholder=\\\"lat\\\" required>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"lng\\\" value=\\\"{{lng}}\\\" name=\\\"lng\\\" placeholder=\\\"lng\\\" required>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"setCurrentPosition()\\\" name=\\\"button\\\">위치 등록</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label col-xs-2\\\" for=\\\"comment\\\">소개글</label>\\r\\n        <div class=\\\"col-xs-10\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"comment\\\" name=\\\"comment\\\" placeholder=\\\"comment\\\" required>\\r\\n        </div>\\r\\n      </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"control-label col-xs-2\\\" for=\\\"picture\\\">사진</label>\\r\\n          <div class=\\\"col-xs-10\\\">\\r\\n            <input type=\\\"file\\\" (change)=\\\"selectFile($event)\\\" name=\\\"picture\\\" class=\\\"form-control\\\" required>\\r\\n            <img src=\\\"{{url}}\\\" alt=\\\"\\\" width=\\\"120px\\\" height=\\\"120px\\\">\\r\\n          </div>\\r\\n      </div>\\r\\n      <button class=\\\"btn btn-primary\\\"  [disabled]=\\\"f.invalid\\\">\\r\\n        <b class=\\\"glyphicon glyphicon-plus\\\"></b>SEND\\r\\n      </button>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n <hr>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-3 col-md-3 col-sm-5 col-xs-5\\\" style=\\\"border:1px solid black\\\">\\r\\n      <label class=\\\"control-label col-sm-2\\\" for=\\\"picture\\\">open</label>\\r\\n      <div class=\\\"col-sm-10\\\">\\r\\n        <input type=\\\"text\\\" name=\\\"\\\" value=\\\"{{opentime}}\\\" class=\\\"timepicker\\\">\\r\\n        <timepicker\\r\\n        [(ngModel)]=\\\"opentime\\\"\\r\\n        [hourStep]=\\\"1\\\"\\r\\n        [minuteStep]=\\\"10\\\"\\r\\n        [showMeridian]=\\\"ismeridian\\\"\\r\\n        [readonlyInput]=\\\"!isEnabled\\\"\\r\\n        ></timepicker>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-3 col-md-3 col-sm-5  col-xs-5\\\" style=\\\"border:1px solid black\\\">\\r\\n      <label class=\\\"control-label col-sm-2\\\" for=\\\"picture\\\">close</label>\\r\\n      <div class=\\\"col-sm-10\\\">\\r\\n        <timepicker\\r\\n        [(ngModel)]=\\\"closetime\\\"\\r\\n        [hourStep]=\\\"1\\\"\\r\\n        [minuteStep]=\\\"10\\\"\\r\\n        [showMeridian]=\\\"ismeridian\\\"\\r\\n        [readonlyInput]=\\\"!isEnabled\\\"\\r\\n        ></timepicker>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-2 col-md-2 col-sm-2 col-xs-2\\\" style=\\\"border:1px solid black\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"isEnabled=!isEnabled\\\">확정</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<pre class=\\\"alert alert-info\\\">Time is: {{opentime | date: 'hh:mm'}} ~ {{closetime | date: 'hh:mm'}}</pre>\\r\\n<hr>\\r\\n<hr> -->\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/truck-regist/truck-regist.component.html\n// module id = ../../../../../src/app/truck-regist/truck-regist.component.html\n// module chunks = main","// import { Component, OnInit } from '@angular/core';\r\n// import { Router } from '@angular/router';\r\n//\r\n// import { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\n// import { TimepickerConfig, TimepickerActions, TimepickerComponent,TimepickerStore } from 'ngx-bootstrap/timepicker';\r\n//\r\n// import { TruckService } from '../_services/truck.service';\r\n// import {AuthenticationService} from '../_services/authentication.service'\r\n// import { Member } from '../_models/member.model';\r\n//\r\n// @Component({\r\n//   selector: 'app-truck-regist',\r\n//   templateUrl: './truck-regist.component.html',\r\n//   styleUrls: ['./truck-regist.component.css']\r\n// })\r\n// export class TruckRegistComponent implements OnInit {\r\n//\r\n//   name: string;\r\n//   open: string;\r\n//   close: string;\r\n//   address: string;\r\n//   comment: string;\r\n//   lat: number;\r\n//   lng: number;\r\n//\r\n//   selectedFiles: FileList;\r\n//   currentFileUpload: File;\r\n//   url: string;\r\n//\r\n//   //1\r\n//   session: string;\r\n//   member: Member;\r\n//\r\n//   ////////////////////\r\n//   ismeridian: boolean = false;\r\n//   isEnabled: boolean = true;\r\n//   opentime:Date = new Date();\r\n//   closetime:Date = new Date();\r\n//   hours: string;\r\n//\r\n//   ///////////////////\r\n//   constructor(\r\n//     private truckService: TruckService,\r\n//     private authenticationService:AuthenticationService,\r\n//     private router: Router,\r\n//     _config: TimepickerConfig,\r\n//    // _cd: ChangeDetectorRef,\r\n//    private _store: TimepickerStore,\r\n//    private _timepickerActions: TimepickerActions\r\n//   ) { }\r\n//\r\n//   ngOnInit() {\r\n//     //2\r\n//     this.session = sessionStorage.getItem('member');\r\n//   }\r\n//   /////////////\r\n//   prevDef($event: any) {\r\n//    $event.preventDefault();\r\n//  }\r\n//  changeHours(step: number, source: 'key'): void {\r\n//     this._store.dispatch(this._timepickerActions.changeHours({ step, source }));\r\n//   }\r\n//   ////////////////\r\n//\r\n//   selectFile(event) {\r\n//     this.selectedFiles = event.target.files;\r\n//     if (event.target.files && event.target.files[0]) {\r\n//       var reader = new FileReader();\r\n//       reader.onload = (event:any) => {\r\n//         this.url = event.target.result;\r\n//       }\r\n//       reader.readAsDataURL(event.target.files[0]);\r\n//     }\r\n//   }\r\n//\r\n//   onSubmit(f) {\r\n//     if(this.selectedFiles === undefined) {\r\n//       alert('사진을 등록하세요');\r\n//     } else {\r\n//     f.value.file = this.selectedFiles.item(0);\r\n//     //3\r\n//     if (this.session !== null) {\r\n//       this.member = JSON.parse(this.session);\r\n//     }\r\n//\r\n//     console.log(f.value);\r\n//     // this.truckService.truckRegist(f.value.name, f.value.open, f.value.close, f.value.lat, f.value.lng, f.value.comment, f.value.file);\r\n//     this.truckService.truckRegist(f.value.name, f.value.open, f.value.close,\r\n//       f.value.lat, f.value.lng, f.value.comment, f.value.file, this.member.memail);\r\n//\r\n//     this.truckService.getObservable().subscribe(message=>{\r\n//       if(message.check=='true'){\r\n//           this.authenticationService.checkTruck(this.member.memail);\r\n//           alert('등록되었습니다.');\r\n//           this.router.navigate([\"truck-list\"]);\r\n//       }\r\n//     });\r\n//   }\r\n//\r\n// }\r\n//\r\n//   private setCurrentPosition() {\r\n//     if (\"geolocation\" in navigator) {\r\n//       navigator.geolocation.getCurrentPosition((position) => {\r\n//         this.lat = position.coords.latitude;\r\n//         this.lng = position.coords.longitude;\r\n//       });\r\n//     }\r\n//   }\r\n//\r\n// }\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { TimepickerConfig, TimepickerActions, TimepickerComponent,TimepickerStore } from 'ngx-bootstrap/timepicker';\r\n\r\nimport { TruckService } from '../_services/truck.service';\r\nimport {AuthenticationService} from '../_services/authentication.service'\r\nimport { Member } from '../_models/member.model';\r\n\r\n@Component({\r\n  selector: 'app-truck-regist',\r\n  templateUrl: './truck-regist.component.html',\r\n  styleUrls: ['./truck-regist.component.css']\r\n})\r\nexport class TruckRegistComponent implements OnInit {\r\n\r\n  name: string;\r\n  open: string;\r\n  close: string;\r\n  address: string;\r\n  comment: string;\r\n  lat: number;\r\n  lng: number;\r\n\r\n  selectedFiles: FileList;\r\n  currentFileUpload: File;\r\n  url: string;\r\n\r\n  //1\r\n  session: string;\r\n  member: Member;\r\n\r\n  ////////////////////\r\n  ismeridian: boolean = false;\r\n  isEnabled: boolean = true;\r\n  opentime:Date = new Date();\r\n  closetime:Date = new Date();\r\n  hours: string;\r\n\r\n  ///////////////////\r\n  constructor(\r\n    private truckService: TruckService,\r\n    private authenticationService:AuthenticationService,\r\n    private router: Router,\r\n    _config: TimepickerConfig,\r\n   // _cd: ChangeDetectorRef,\r\n   private _store: TimepickerStore,\r\n   private _timepickerActions: TimepickerActions\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    //2\r\n    this.session = sessionStorage.getItem('member');\r\n  }\r\n  /////////////\r\n  prevDef($event: any) {\r\n   $event.preventDefault();\r\n }\r\n changeHours(step: number, source: 'key'): void {\r\n    this._store.dispatch(this._timepickerActions.changeHours({ step, source }));\r\n  }\r\n  ////////////////\r\n\r\n  selectFile(event) {\r\n    this.selectedFiles = event.target.files;\r\n    if (event.target.files && event.target.files[0]) {\r\n      var reader = new FileReader();\r\n      reader.onload = (event:any) => {\r\n        this.url = event.target.result;\r\n      }\r\n      reader.readAsDataURL(event.target.files[0]);\r\n    }\r\n  }\r\n\r\n  onSubmit(f) {\r\n    if(this.selectedFiles === undefined) {\r\n      alert('사진을 등록하세요');\r\n    } else {\r\n    f.value.file = this.selectedFiles.item(0);\r\n    //3\r\n    if (this.session !== null) {\r\n      this.member = JSON.parse(this.session);\r\n    }\r\n\r\n    console.log(f.value);\r\n    // this.truckService.truckRegist(f.value.name, f.value.open, f.value.close, f.value.lat, f.value.lng, f.value.comment, f.value.file);\r\n    this.truckService.truckRegist(f.value.name, f.value.open, f.value.close,\r\n      f.value.lat, f.value.lng, f.value.comment, f.value.file, this.member.memail);\r\n\r\n    this.truckService.getObservable().subscribe(message=>{\r\n      if(message.check=='true'){\r\n          this.authenticationService.checkTruck(this.member.memail);\r\n          alert('등록되었습니다.');\r\n          this.router.navigate([\"truck-list\"]);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\n  private setCurrentPosition() {\r\n    if (\"geolocation\" in navigator) {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        this.lat = position.coords.latitude;\r\n        this.lng = position.coords.longitude;\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/truck-regist/truck-regist.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".star-rating-comp {\\r\\n  font-size:1.2rem;\\r\\n  line-height: 1.2rem;\\r\\n  /*display: inline-block;*/\\r\\n}\\r\\n.rating {\\r\\n  -webkit-box-pack: start;\\r\\n      -ms-flex-pack: start;\\r\\n          justify-content: flex-start;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/truck-reviews/truck-reviews.component.css\n// module id = ../../../../../src/app/truck-reviews/truck-reviews.component.css\n// module chunks = main","module.exports = \"<!-- <div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <h3>트럭 {{tid}}번의 리뷰</h3>\\r\\n    화면에 결과 메세지를 띄우고 싶을 때, 지금은 alert사용\\r\\n    <div *ngIf=\\\"message\\\" class=\\\"alert alert-info\\\">{{message}}</div>\\r\\n    <div  class=\\\"col-md-12\\\" *ngFor=\\\"let r of truckReviews | paginate: {itemsPerPage: 5,\\r\\n                                                                      currentPage: p}\\\">\\r\\n      <div class=\\\"panel panel-default\\\">\\r\\n        <div class=\\\"panel-heading\\\" >리뷰 번호: {{r.rid}}</div>\\r\\n        <div class=\\\"panel-body\\\" >\\r\\n          <div class=\\\"col-md-2 col-sm-4 col-xs-6\\\" *ngIf=\\\"r.rimage\\\">\\r\\n            <img src=\\\"http://localhost:8080/image/{{r.rimage}}\\\" alt=\\\"x\\\" width=\\\"120px\\\" height=\\\"120px\\\">\\r\\n          </div>\\r\\n          <div class=\\\"col-md-10 col-sm-8 col-xs-6\\\">\\r\\n            내용: {{r.rcomment}}<br>\\r\\n            점수: {{r.rscore}}<br>\\r\\n            작성일: {{r.rdate}}<br>\\r\\n            작성자: {{r.rmember}}<br>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row text-center\\\">\\r\\n    <ul class=\\\"pagination\\\" style=\\\"\\\">\\r\\n      <pagination-controls (pageChange)=\\\"p = $event\\\"\\r\\n                            directionLinks=\\\"true\\\"\\r\\n                            autoHide=\\\"true\\\"\\r\\n                            previousLabel=\\\"\\\"\\r\\n                            nextLabel=\\\"\\\"\\r\\n                            screenReaderPaginationLabel=\\\"Pagination\\\"\\r\\n                            screenReaderPageLabel=\\\"page\\\"\\r\\n                            screenReaderCurrentLabel=\\\"You're on page\\\">\\r\\n      </pagination-controls>\\r\\n    </ul>\\r\\n  </div>\\r\\n  <form class=\\\"form-horizontal\\\" *ngIf=\\\"member\\\" name=\\\"form\\\" (ngSubmit)=\\\"onSubmit(f)\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"comment\\\" class=\\\"control-label col-xs-2\\\">글내용</label>\\r\\n      <div class=\\\"col-xs-10\\\">\\r\\n        <textarea rows=\\\"5\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"comment\\\" name=\\\"comment\\\" required></textarea>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"score\\\" class=\\\"control-label col-xs-2\\\">별점</label>\\r\\n      <div class=\\\"col-xs-10\\\">\\r\\n        <div class=\\\"star-rating\\\">\\r\\n          <star-rating-comp   [(ngModel)]=\\\"score\\\"\\r\\n                              [starType]=\\\"'svg'\\\"\\r\\n                              [hoverEnabled]=\\\"true\\\"\\r\\n                              [size]=\\\"'medium'\\\"\\r\\n                              [staticColor]=\\\"'ok'\\\"\\r\\n                              [direction]=\\\"'ltr'\\\"\\r\\n                              [rating]=\\\"3\\\"\\r\\n                              [step]=\\\"0.5\\\"\\r\\n                              [showHalfStars]=\\\"true\\\"\\r\\n                              (onClick)=\\\"onClick($event)\\\"\\r\\n                              (onRatingChange)=\\\"onRatingChange($event)\\\"\\r\\n                              (onHoverRatingChange)=\\\"onHoverRatingChange($event)\\\">\\r\\n          </star-rating-comp>\\r\\n          <p>onHoverRatingChangeResult: {{onHoverRatingChangeResult | json}}</p>\\r\\n          <p>onClickResult: {{onClickResult | json}}</p>\\r\\n          <p>onRatingChangeResult: {{onRatingChangeResult | json}}</p>\\r\\n        </div>\\r\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"score\\\" name=\\\"score\\\" required>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"sr-only\\\" class=\\\"control-label col-xs-2\\\" for=\\\"image\\\">사진</label>\\r\\n      <div class=\\\"col-xs-10\\\">\\r\\n        <input type=\\\"file\\\" class=\\\"form-control\\\" name=\\\"image\\\" (change)=\\\"selectFile($event)\\\">\\r\\n        <img src=\\\"{{url}}\\\" alt=\\\"\\\" width=\\\"120px\\\" height=\\\"120px\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"col-xs-offset-2 col-xs-10\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\"  [disabled]=\\\"f.invalid\\\">Add</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n<hr>\\r\\n<div class=\\\"container\\\">\\r\\n  <hr>\\r\\n  <div class=\\\"star-rating\\\">\\r\\n    <star-rating-comp   [starType]=\\\"'svg'\\\"\\r\\n                        [hoverEnabled]=\\\"true\\\"\\r\\n                        [size]=\\\"'medium'\\\"\\r\\n                        [staticColor]=\\\"'ok'\\\"\\r\\n                        [direction]=\\\"'ltr'\\\"\\r\\n                        [rating]=\\\"3\\\"\\r\\n                        [step]=\\\"0.5\\\"\\r\\n                        [showHalfStars]=\\\"true\\\"\\r\\n                        (onClick)=\\\"onClick($event)\\\"\\r\\n                        (onRatingChange)=\\\"onRatingChange($event)\\\"\\r\\n                        (onHoverRatingChange)=\\\"onHoverRatingChange($event)\\\">\\r\\n    </star-rating-comp>\\r\\n    <p>onHoverRatingChangeResult: {{onHoverRatingChangeResult | json}}</p>\\r\\n    <p>onClickResult: {{onClickResult | json}}</p>\\r\\n    <p>onRatingChangeResult: {{onRatingChangeResult | json}}</p>\\r\\n  </div>\\r\\n</div>\\r\\n<hr> -->\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <h3>트럭 {{tid}}번의 리뷰</h3>\\r\\n    <div *ngIf=\\\"message\\\" class=\\\"alert alert-info\\\">{{message}}</div>\\r\\n    <div  class=\\\"col-md-12\\\" *ngFor=\\\"let r of truckReviews | paginate: {itemsPerPage: 5,\\r\\n                                                                      currentPage: p}\\\">\\r\\n      <div class=\\\"panel panel-default\\\">\\r\\n        <div class=\\\"panel-heading\\\" >리뷰 번호: {{r.rid}}</div>\\r\\n        <div class=\\\"panel-body\\\" >\\r\\n          <div class=\\\"col-md-2 col-sm-3\\\" *ngIf=\\\"r.rimage\\\">\\r\\n            <img src=\\\"http://localhost:8080/image/{{r.rimage}}\\\" alt=\\\"x\\\" width=\\\"120px\\\" height=\\\"120px\\\">\\r\\n          </div>\\r\\n          <div class=\\\"col-md-10 col-sm-9\\\">\\r\\n            작성자: {{r.rmember}} <span style=\\\"color: gray; font-size: 0.7em\\\"> | {{r.rdate}}</span> <br>\\r\\n            <div class=\\\"rating\\\">\\r\\n              <div class=\\\"star-container\\\">\\r\\n                <star-rating-comp\\r\\n                  [starType]=\\\"'svg'\\\"\\r\\n                  [hoverEnabled]=\\\"false\\\"\\r\\n                  [staticColor]=\\\"'ok'\\\"\\r\\n                  [size]=\\\"'medium'\\\"\\r\\n                  [direction]=\\\"'ltr'\\\"\\r\\n                  [rating]=\\\"r.rscore\\\"\\r\\n                  [showHalfStars]=\\\"true\\\"\\r\\n                  [readOnly]=\\\"true\\\">\\r\\n              </star-rating-comp>\\r\\n              </div>\\r\\n            </div>\\r\\n            내용: {{r.rcomment}}<br>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row text-center\\\">\\r\\n    <ul class=\\\"pagination\\\" style=\\\"\\\">\\r\\n      <pagination-controls (pageChange)=\\\"p = $event\\\"\\r\\n                            directionLinks=\\\"true\\\"\\r\\n                            autoHide=\\\"true\\\"\\r\\n                            previousLabel=\\\"\\\"\\r\\n                            nextLabel=\\\"\\\"\\r\\n                            screenReaderPaginationLabel=\\\"Pagination\\\"\\r\\n                            screenReaderPageLabel=\\\"page\\\"\\r\\n                            screenReaderCurrentLabel=\\\"You're on page\\\">\\r\\n      </pagination-controls>\\r\\n    </ul>\\r\\n  </div>\\r\\n  <form class=\\\"form-horizontal\\\" *ngIf=\\\"member\\\" name=\\\"form\\\" [formGroup]=\\\"f\\\" (ngSubmit)=\\\"onSubmit(f.value)\\\"  novalidate>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"comment\\\" class=\\\"control-label col-xs-2\\\">글내용</label>\\r\\n      <div class=\\\"col-xs-10\\\">\\r\\n        <textarea rows=\\\"5\\\" class=\\\"form-control\\\" formControlName=\\\"comment\\\" name=\\\"comment\\\" required></textarea>\\r\\n      </div>\\r\\n      <div class=\\\"alert\\\" *ngIf=\\\"!f.controls['comment'].valid && f.controls['comment'].touched\\\">must write</div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"score\\\" class=\\\"control-label col-xs-2\\\">별점</label>\\r\\n      <div class=\\\"col-xs-10\\\">\\r\\n        <div class=\\\"star-rating\\\">\\r\\n          <star-rating-comp   formControlName=\\\"score\\\"\\r\\n                              [starType]=\\\"'svg'\\\"\\r\\n                              [hoverEnabled]=\\\"true\\\"\\r\\n                              [size]=\\\"'medium'\\\"\\r\\n                              [staticColor]=\\\"'ok'\\\"\\r\\n                              [rating]=\\\"3\\\"\\r\\n                              [showHalfStars]=\\\"true\\\">\\r\\n          </star-rating-comp>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"sr-only\\\" class=\\\"control-label col-xs-2\\\" for=\\\"image\\\">사진</label>\\r\\n      <div class=\\\"col-xs-10\\\">\\r\\n        <input type=\\\"file\\\" class=\\\"form-control\\\" name=\\\"image\\\" (change)=\\\"selectFile($event)\\\">\\r\\n        <img src=\\\"{{url}}\\\" alt=\\\"\\\" width=\\\"120px\\\" height=\\\"120px\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"col-xs-offset-2 col-xs-10\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"f.invalid\\\">Add</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n<hr>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projectd/food-truck-angular/src/app/truck-reviews/truck-reviews.component.html\n// module id = ../../../../../src/app/truck-reviews/truck-reviews.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { Router } from '@angular/router';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\n\r\n//star-rating\r\nimport {OnClickEvent, OnRatingChangeEven, OnHoverRatingChangeEvent} from \"angular-star-rating/star-rating-struct\";\r\n\r\nimport { ReviewService } from '../_services/review.service';\r\n\r\nimport { Member } from '../_models/member.model';\r\nimport { Review } from '../_models/review.model';\r\n\r\n@Component({\r\n  selector: 'app-truck-reviews',\r\n  templateUrl: './truck-reviews.component.html',\r\n  styleUrls: ['./truck-reviews.component.css']\r\n})\r\n\r\n//나의리뷰와 같은 리뷰이기 때문에 따로 service를 만들지 않고 같은 reviewService를 사용.\r\nexport class TruckReviewsComponent implements OnInit {\r\n  //truck-info에서 tid값 가져오기\r\n  @Input('tid') tid: string;\r\n\r\n  member: Member;\r\n  truckReviews: Review[];\r\n\r\n  message: string;\r\n\r\n  selectedFiles: FileList;\r\n  currentFileUpload: File;\r\n  url: string;\r\n\r\n  //pagination\r\n  p: number = 1;\r\n\r\n  constructor(\r\n    private http: Http,\r\n    private router: Router,\r\n    private reviewService: ReviewService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    //로그인한 회원의 정보 구하기\r\n    var session = sessionStorage.getItem('member');\r\n    if (session !== null) {\r\n      this.member = JSON.parse(session) as Member;\r\n    }\r\n\r\n    //star-rating\r\n    this.f = fb.group({\r\n      'comment' : [null, Validators.compose([Validators.required, Validators.maxLength(500)])],\r\n      'score' :  new FormControl('')\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getTruckReview(this.tid);\r\n    this.reviewService.getObservable().subscribe(\r\n      messege => {\r\n        if (messege.result = 'ok') {\r\n          this.reviewService.getTruckReview(this.tid).subscribe(res => {\r\n            console.log(res);\r\n            this.truckReviews = res;\r\n            this.message = null;\r\n          });\r\n        }\r\n      })\r\n  }\r\n\r\n  //star-rating\r\n  // onClickResult: OnClickEvent;\r\n  // onHoverRatingChangeResult: OnHoverRatingChangeEvent;\r\n  // onRatingChangeResult: OnRatingChangeEven;\r\n  //\r\n  // onClick = ($event: OnClickEvent) => {\r\n  //   console.log('onClick $event: ', $event);\r\n  //   this.onClickResult = $event;\r\n  // };\r\n  //\r\n  // onRatingChange = ($event: OnRatingChangeEven) => {\r\n  //   console.log('onRatingUpdated $event: ', $event);\r\n  //   this.onRatingChangeResult = $event;\r\n  // };\r\n  //\r\n  // onHoverRatingChange = ($event: OnHoverRatingChangeEvent) => {\r\n  //   console.log('onHoverRatingChange $event: ', $event);\r\n  //   this.onHoverRatingChangeResult = $event;\r\n  // };\r\n\r\n\r\n  //사진올리기\r\n  selectFile(event) {\r\n    this.selectedFiles = event.target.files;\r\n    if (event.target.files && event.target.files[0]) {\r\n      var reader = new FileReader();\r\n      reader.onload = (event: any) => {\r\n        this.url = event.target.result;\r\n      }\r\n      reader.readAsDataURL(event.target.files[0]);\r\n    }\r\n  }\r\n\r\n  f: FormGroup;\r\n  post:any;\r\n\r\n  onSubmit(post) {\r\n    if (this.selectedFiles === undefined) {\r\n      this.addReview2(post.comment, post.score, this.member.memail, this.tid);\r\n    } else {\r\n      post.image = this.selectedFiles.item(0);\r\n      console.log(post);\r\n      this.addReview(post.comment, post.image, post.score, this.member.memail, this.tid);\r\n    }\r\n  }\r\n\r\n  // onSubmit(f) {\r\n  //   if (this.selectedFiles === undefined) {\r\n  //     this.addReview2(f.value.comment, f.value.score, this.member.memail, this.tid);\r\n  //   } else {\r\n  //     f.value.image = this.selectedFiles.item(0);\r\n  //     console.log(f.value);\r\n  //     this.addReview(f.value.comment, f.value.image, f.value.score, this.member.memail, this.tid);\r\n  //   }\r\n  // }\r\n\r\n  addReview(comment: string, image: File, score: string, email: string, truck: string) {\r\n    this.reviewService.addReview(comment, image, score, email, truck);\r\n    alert('등록완료')\r\n  }\r\n\r\n  addReview2(comment: string, score: string, email: string, truck: string) {\r\n    this.reviewService.addReview2(comment, score, email, truck);\r\n    alert('등록완료')\r\n  }\r\n\r\n  removeReview(review: Review) {\r\n    this.reviewService.removeReview(review)\r\n      .subscribe(result => {\r\n        // this.message = result;\r\n        alert(result);\r\n        this.getTruckReview(this.tid);\r\n      }\r\n      );\r\n  }\r\n\r\n\r\n  getTruckReview(tid: string) {\r\n    this.reviewService.getTruckReview(tid)\r\n      .subscribe(result => {\r\n        result as Review[];\r\n        result.map(res => {\r\n          if (res.rerror !== null) {\r\n            this.message = res.rerror;\r\n          } else {\r\n            this.truckReviews = result;\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/app/truck-reviews/truck-reviews.component.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projectd/food-truck-angular/src/main.ts"],"sourceRoot":"webpack:///"}